<?xml version='1.0'?>
<signatures version='1.0'>
<struct type='{_CPTGradientElement=&quot;color&quot;{_CPTRGBAColor=&quot;red&quot;f&quot;green&quot;f&quot;blue&quot;f&quot;alpha&quot;f}&quot;position&quot;f&quot;nextElement&quot;^{_CPTGradientElement}}' name='CPTGradientElement'>
<field type='{_CPTRGBAColor=&quot;red&quot;f&quot;green&quot;f&quot;blue&quot;f&quot;alpha&quot;f}' declared_type='CPTRGBAColor' name='color'/>
<field type='f' declared_type='CGFloat' name='position'/>
<field type='^{_CPTGradientElement={_CPTRGBAColor=ffff}f^{_CPTGradientElement}}' declared_type='struct _CPTGradientElement*' name='nextElement'/>
</struct>
<struct type='{_CPTNumericDataType=&quot;dataTypeFormat&quot;i&quot;sampleBytes&quot;I&quot;byteOrder&quot;i}' name='CPTNumericDataType'>
<field type='i' declared_type='CPTDataTypeFormat' name='dataTypeFormat'/>
<field type='L' declared_type='size_t' name='sampleBytes'/>
<field type='l' declared_type='CFByteOrder' name='byteOrder'/>
</struct>
<struct type='{_CPTRGBAColor=&quot;red&quot;f&quot;green&quot;f&quot;blue&quot;f&quot;alpha&quot;f}' name='CPTRGBAColor'>
<field type='f' declared_type='CGFloat' name='red'/>
<field type='f' declared_type='CGFloat' name='green'/>
<field type='f' declared_type='CGFloat' name='blue'/>
<field type='f' declared_type='CGFloat' name='alpha'/>
</struct>
<constant type='@' declared_type='NSString*' const='true' name='CPTBarPlotBindingBarBases'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTBarPlotBindingBarFills'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTBarPlotBindingBarLineStyles'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTBarPlotBindingBarLocations'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTBarPlotBindingBarTips'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTDataException'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTException'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTGraphNeedsRedrawNotification'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTLayerBoundsDidChangeNotification'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTLegendNeedsLayoutForPlotNotification'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTLegendNeedsRedrawForPlotNotification'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTLegendNeedsReloadEntriesForPlotNotification'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTNumericDataException'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTPieChartBindingPieSliceFills'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTPieChartBindingPieSliceRadialOffsets'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTPieChartBindingPieSliceWidthValues'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTPlotBindingDataLabels'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTPlotSpaceCoordinateMappingDidChangeNotification'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTRangePlotBindingBarLineStyles'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTRangePlotBindingHighValues'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTRangePlotBindingLeftValues'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTRangePlotBindingLowValues'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTRangePlotBindingRightValues'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTRangePlotBindingXValues'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTRangePlotBindingYValues'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTScatterPlotBindingPlotSymbols'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTScatterPlotBindingXValues'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTScatterPlotBindingYValues'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTTradingRangePlotBindingCloseValues'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTTradingRangePlotBindingDecreaseFills'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTTradingRangePlotBindingDecreaseLineStyles'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTTradingRangePlotBindingHighValues'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTTradingRangePlotBindingIncreaseFills'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTTradingRangePlotBindingIncreaseLineStyles'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTTradingRangePlotBindingLineStyles'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTTradingRangePlotBindingLowValues'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTTradingRangePlotBindingOpenValues'/>
<constant type='@' declared_type='NSString*' const='true' name='CPTTradingRangePlotBindingXValues'/>
<constant type='@' declared_type='NSString*' const='true' name='kCPTDarkGradientTheme'/>
<constant type='@' declared_type='NSString*' const='true' name='kCPTPlainBlackTheme'/>
<constant type='@' declared_type='NSString*' const='true' name='kCPTPlainWhiteTheme'/>
<constant type='@' declared_type='NSString*' const='true' name='kCPTSlateTheme'/>
<constant type='@' declared_type='NSString*' const='true' name='kCPTStocksTheme'/>
<constant type='f' declared_type='CGFloat' const='true' name='kCPTTextLayerMarginWidth'/>
<enum value='5' name='CPTAlignmentBottom'/>
<enum value='1' name='CPTAlignmentCenter'/>
<enum value='0' name='CPTAlignmentLeft'/>
<enum value='4' name='CPTAlignmentMiddle'/>
<enum value='2' name='CPTAlignmentRight'/>
<enum value='3' name='CPTAlignmentTop'/>
<enum value='3' name='CPTAxisLabelingPolicyAutomatic'/>
<enum value='4' name='CPTAxisLabelingPolicyEqualDivisions'/>
<enum value='2' name='CPTAxisLabelingPolicyFixedInterval'/>
<enum value='1' name='CPTAxisLabelingPolicyLocationsProvided'/>
<enum value='0' name='CPTAxisLabelingPolicyNone'/>
<enum value='2' name='CPTBarPlotFieldBarBase'/>
<enum value='0' name='CPTBarPlotFieldBarLocation'/>
<enum value='1' name='CPTBarPlotFieldBarTip'/>
<enum value='1' name='CPTChromaticBlendingMode'/>
<enum value='4' name='CPTComplexFloatingPointDataType'/>
<enum value='0' name='CPTCoordinateX'/>
<enum value='1' name='CPTCoordinateY'/>
<enum value='2' name='CPTCoordinateZ'/>
<enum value='1' name='CPTDataOrderColumnsFirst'/>
<enum value='0' name='CPTDataOrderRowsFirst'/>
<enum value='5' name='CPTDecimalDataType'/>
<enum value='1' name='CPTErrorBarTypeConstantRatio'/>
<enum value='2' name='CPTErrorBarTypeConstantValue'/>
<enum value='0' name='CPTErrorBarTypeCustom'/>
<enum value='3' name='CPTFloatingPointDataType'/>
<enum value='0' name='CPTGradientTypeAxial'/>
<enum value='1' name='CPTGradientTypeRadial'/>
<enum value='4' name='CPTGraphLayerTypeAxisLabels'/>
<enum value='2' name='CPTGraphLayerTypeAxisLines'/>
<enum value='5' name='CPTGraphLayerTypeAxisTitles'/>
<enum value='1' name='CPTGraphLayerTypeMajorGridLines'/>
<enum value='0' name='CPTGraphLayerTypeMinorGridLines'/>
<enum value='3' name='CPTGraphLayerTypePlots'/>
<enum value='1' name='CPTIntegerDataType'/>
<enum value='2' name='CPTInverseChromaticBlendingMode'/>
<enum value='9' name='CPTLineCapTypeBar'/>
<enum value='10' name='CPTLineCapTypeCross'/>
<enum value='12' name='CPTLineCapTypeCustom'/>
<enum value='6' name='CPTLineCapTypeDiamond'/>
<enum value='5' name='CPTLineCapTypeEllipse'/>
<enum value='8' name='CPTLineCapTypeHexagon'/>
<enum value='0' name='CPTLineCapTypeNone'/>
<enum value='1' name='CPTLineCapTypeOpenArrow'/>
<enum value='7' name='CPTLineCapTypePentagon'/>
<enum value='4' name='CPTLineCapTypeRectangle'/>
<enum value='11' name='CPTLineCapTypeSnow'/>
<enum value='2' name='CPTLineCapTypeSolidArrow'/>
<enum value='3' name='CPTLineCapTypeSweptArrow'/>
<enum value='0' name='CPTLinearBlendingMode'/>
<enum value='2' name='CPTNumericTypeDouble'/>
<enum value='1' name='CPTNumericTypeFloat'/>
<enum value='0' name='CPTNumericTypeInteger'/>
<enum value='0' name='CPTPieChartFieldSliceWidth'/>
<enum value='1' name='CPTPieChartFieldSliceWidthNormalized'/>
<enum value='2' name='CPTPieChartFieldSliceWidthSum'/>
<enum value='0' name='CPTPieDirectionClockwise'/>
<enum value='1' name='CPTPieDirectionCounterClockwise'/>
<enum value='0' name='CPTPlotCachePrecisionAuto'/>
<enum value='2' name='CPTPlotCachePrecisionDecimal'/>
<enum value='1' name='CPTPlotCachePrecisionDouble'/>
<enum value='2' name='CPTPlotRangeComparisonResultNumberAboveRange'/>
<enum value='0' name='CPTPlotRangeComparisonResultNumberBelowRange'/>
<enum value='1' name='CPTPlotRangeComparisonResultNumberInRange'/>
<enum value='8' name='CPTPlotSymbolTypeCross'/>
<enum value='12' name='CPTPlotSymbolTypeCustom'/>
<enum value='10' name='CPTPlotSymbolTypeDash'/>
<enum value='3' name='CPTPlotSymbolTypeDiamond'/>
<enum value='2' name='CPTPlotSymbolTypeEllipse'/>
<enum value='7' name='CPTPlotSymbolTypeHexagon'/>
<enum value='0' name='CPTPlotSymbolTypeNone'/>
<enum value='6' name='CPTPlotSymbolTypePentagon'/>
<enum value='9' name='CPTPlotSymbolTypePlus'/>
<enum value='1' name='CPTPlotSymbolTypeRectangle'/>
<enum value='11' name='CPTPlotSymbolTypeSnow'/>
<enum value='5' name='CPTPlotSymbolTypeStar'/>
<enum value='4' name='CPTPlotSymbolTypeTriangle'/>
<enum value='2' name='CPTRangePlotFieldHigh'/>
<enum value='4' name='CPTRangePlotFieldLeft'/>
<enum value='3' name='CPTRangePlotFieldLow'/>
<enum value='5' name='CPTRangePlotFieldRight'/>
<enum value='0' name='CPTRangePlotFieldX'/>
<enum value='1' name='CPTRangePlotFieldY'/>
<enum value='1' name='CPTRectAnchorBottom'/>
<enum value='0' name='CPTRectAnchorBottomLeft'/>
<enum value='2' name='CPTRectAnchorBottomRight'/>
<enum value='8' name='CPTRectAnchorCenter'/>
<enum value='3' name='CPTRectAnchorLeft'/>
<enum value='4' name='CPTRectAnchorRight'/>
<enum value='6' name='CPTRectAnchorTop'/>
<enum value='5' name='CPTRectAnchorTopLeft'/>
<enum value='7' name='CPTRectAnchorTopRight'/>
<enum value='2' name='CPTScaleTypeAngular'/>
<enum value='4' name='CPTScaleTypeCategory'/>
<enum value='3' name='CPTScaleTypeDateTime'/>
<enum value='0' name='CPTScaleTypeLinear'/>
<enum value='1' name='CPTScaleTypeLog'/>
<enum value='0' name='CPTScatterPlotFieldX'/>
<enum value='1' name='CPTScatterPlotFieldY'/>
<enum value='3' name='CPTScatterPlotInterpolationCurved'/>
<enum value='2' name='CPTScatterPlotInterpolationHistogram'/>
<enum value='0' name='CPTScatterPlotInterpolationLinear'/>
<enum value='1' name='CPTScatterPlotInterpolationStepped'/>
<enum value='-1' name='CPTSignNegative'/>
<enum value='0' name='CPTSignNone'/>
<enum value='1' name='CPTSignPositive'/>
<enum value='1' name='CPTTextAlignmentCenter'/>
<enum value='0' name='CPTTextAlignmentLeft'/>
<enum value='2' name='CPTTextAlignmentRight'/>
<enum value='4' name='CPTTradingRangePlotFieldClose'/>
<enum value='2' name='CPTTradingRangePlotFieldHigh'/>
<enum value='3' name='CPTTradingRangePlotFieldLow'/>
<enum value='1' name='CPTTradingRangePlotFieldOpen'/>
<enum value='0' name='CPTTradingRangePlotFieldX'/>
<enum value='1' name='CPTTradingRangePlotStyleCandleStick'/>
<enum value='0' name='CPTTradingRangePlotStyleOHLC'/>
<enum value='0' name='CPTUndefinedDataType'/>
<enum value='2' name='CPTUnsignedIntegerDataType'/>
<enum value='0' name='CPT_SDK_SUPPORTS_WEAK'/>
<function name='AddRoundedRectPath'>
<arg type='^{CGContext=}' declared_type='CGContextRef' name='context'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' name='rect'/>
<arg type='f' declared_type='CGFloat' name='cornerRadius'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CPTAlignIntegralPointToUserSpace'>
<arg type='^{CGContext=}' declared_type='CGContextRef' name='context'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='point'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='CPTAlignIntegralRectToUserSpace'>
<arg type='^{CGContext=}' declared_type='CGContextRef' name='context'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' name='rect'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</function>
<function name='CPTAlignPointToUserSpace'>
<arg type='^{CGContext=}' declared_type='CGContextRef' name='context'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='point'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</function>
<function name='CPTAlignRectToUserSpace'>
<arg type='^{CGContext=}' declared_type='CGContextRef' name='context'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' name='rect'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</function>
<function name='CPTAlignSizeToUserSpace'>
<arg type='^{CGContext=}' declared_type='CGContextRef' name='context'/>
<arg type='{CGSize=ff}' declared_type='CGSize' name='size'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</function>
<function name='CPTDataType'>
<arg type='i' declared_type='CPTDataTypeFormat' name='format'/>
<arg type='L' declared_type='size_t' name='sampleBytes'/>
<arg type='l' declared_type='CFByteOrder' name='byteOrder'/>
<retval type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType'/>
</function>
<function name='CPTDataTypeEqualToDataType'>
<arg type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType' name='dataType1'/>
<arg type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType' name='dataType2'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='CPTDataTypeIsSupported'>
<arg type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType' name='format'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='CPTDataTypeStringFromDataType'>
<arg type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType' name='dataType'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='CPTDataTypeWithDataTypeString'>
<arg type='@' declared_type='NSString*' name='dataTypeString'/>
<retval type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType'/>
</function>
<function name='CPTDecimalAdd'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='leftOperand'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='rightOperand'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalCGFloatValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='decimalNumber'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<function name='CPTDecimalCharValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='decimalNumber'/>
<retval type='c' declared_type='int8_t'/>
</function>
<function name='CPTDecimalDivide'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='numerator'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='denominator'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalDoubleValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='decimalNumber'/>
<retval type='d' declared_type='double'/>
</function>
<function name='CPTDecimalEquals'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='leftOperand'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='rightOperand'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='CPTDecimalFloatValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='decimalNumber'/>
<retval type='f' declared_type='float'/>
</function>
<function name='CPTDecimalFromCGFloat'>
<arg type='f' declared_type='CGFloat' name='aCGFloat'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromChar'>
<arg type='c' declared_type='int8_t' name='anInt'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromDouble'>
<arg type='d' declared_type='double' name='aDouble'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromFloat'>
<arg type='f' declared_type='float' name='aFloat'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromInt'>
<arg type='i' declared_type='int' name='i'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromInteger'>
<arg type='i' declared_type='NSInteger' name='i'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromLong'>
<arg type='i' declared_type='int32_t' name='anInt'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromLongLong'>
<arg type='q' declared_type='int64_t' name='anInt'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromShort'>
<arg type='s' declared_type='int16_t' name='anInt'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromString'>
<arg type='@' declared_type='NSString*' name='stringRepresentation'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromUnsignedChar'>
<arg type='C' declared_type='uint8_t' name='i'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromUnsignedInt'>
<arg type='I' declared_type='unsigned int' name='i'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromUnsignedInteger'>
<arg type='I' declared_type='NSUInteger' name='i'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromUnsignedLong'>
<arg type='I' declared_type='uint32_t' name='i'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromUnsignedLongLong'>
<arg type='Q' declared_type='uint64_t' name='i'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalFromUnsignedShort'>
<arg type='S' declared_type='uint16_t' name='i'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalGreaterThan'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='leftOperand'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='rightOperand'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='CPTDecimalGreaterThanOrEqualTo'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='leftOperand'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='rightOperand'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='CPTDecimalIntValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='decimalNumber'/>
<retval type='i' declared_type='int'/>
</function>
<function name='CPTDecimalIntegerValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='decimalNumber'/>
<retval type='i' declared_type='NSInteger'/>
</function>
<function name='CPTDecimalLessThan'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='leftOperand'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='rightOperand'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='CPTDecimalLessThanOrEqualTo'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='leftOperand'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='rightOperand'/>
<retval type='B' declared_type='BOOL'/>
</function>
<function name='CPTDecimalLongLongValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='decimalNumber'/>
<retval type='q' declared_type='int64_t'/>
</function>
<function name='CPTDecimalLongValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='decimalNumber'/>
<retval type='i' declared_type='int32_t'/>
</function>
<function name='CPTDecimalMultiply'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='leftOperand'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='rightOperand'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalNaN'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalShortValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='decimalNumber'/>
<retval type='s' declared_type='int16_t'/>
</function>
<function name='CPTDecimalStringValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='decimalNumber'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='CPTDecimalSubtract'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='leftOperand'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='rightOperand'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</function>
<function name='CPTDecimalUnsignedCharValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='decimalNumber'/>
<retval type='C' declared_type='uint8_t'/>
</function>
<function name='CPTDecimalUnsignedIntValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='decimalNumber'/>
<retval type='I' declared_type='unsigned int'/>
</function>
<function name='CPTDecimalUnsignedIntegerValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='decimalNumber'/>
<retval type='I' declared_type='NSUInteger'/>
</function>
<function name='CPTDecimalUnsignedLongLongValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='decimalNumber'/>
<retval type='Q' declared_type='uint64_t'/>
</function>
<function name='CPTDecimalUnsignedLongValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='decimalNumber'/>
<retval type='I' declared_type='uint32_t'/>
</function>
<function name='CPTDecimalUnsignedShortValue'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' name='decimalNumber'/>
<retval type='S' declared_type='uint16_t'/>
</function>
<function name='CPTExpandedRange'>
<arg type='{_NSRange=II}' declared_type='NSRange' name='range'/>
<arg type='i' declared_type='NSInteger' name='expandBy'/>
<retval type='{_NSRange=II}' declared_type='NSRange'/>
</function>
<function name='CPTGetCurrentContext'>
<retval type='^{CGContext=}' declared_type='CGContextRef'/>
</function>
<function name='CPTOrthogonalCoordinate'>
<arg type='i' declared_type='CPTCoordinate' name='coord'/>
<retval type='i' declared_type='CPTCoordinate'/>
</function>
<function name='CPTPopCGContext'>
<retval type='v' declared_type='void'/>
</function>
<function name='CPTPushCGContext'>
<arg type='^{CGContext=}' declared_type='CGContextRef' name='context'/>
<retval type='v' declared_type='void'/>
</function>
<function name='CPTRGBAColorFromCGColor'>
<arg type='^{CGColor=}' declared_type='CGColorRef' name='color'/>
<retval type='{_CPTRGBAColor=ffff}' declared_type='CPTRGBAColor'/>
</function>
<function name='CPTStringFromPoint'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='point'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='CPTStringFromRect'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' name='rect'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='CPTStringFromSize'>
<arg type='{CGSize=ff}' declared_type='CGSize' name='size'/>
<retval type='@' declared_type='NSString*'/>
</function>
<function name='CreateRoundedRectPath'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' name='rect'/>
<arg type='f' declared_type='CGFloat' name='cornerRadius'/>
<retval type='^{CGPath=}' declared_type='CGPathRef'/>
</function>
<function name='squareOfDistanceBetweenPoints'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='point1'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' name='point2'/>
<retval type='f' declared_type='CGFloat'/>
</function>
<class name='CPTAnnotation'>
<method selector='annotationHostLayer'>
<retval type='@' declared_type='CPTAnnotationHostLayer*'/>
</method>
<method selector='contentAnchorPoint'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='contentLayer'>
<retval type='@' declared_type='CPTLayer*'/>
</method>
<method selector='displacement'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='positionContentLayer'>
<retval type='v' declared_type='void'/>
</method>
<method selector='rotation'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setAnnotationHostLayer:'>
<arg type='@' declared_type='CPTAnnotationHostLayer*' index='0' name='annotationHostLayer'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentAnchorPoint:'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='0' name='contentAnchorPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentLayer:'>
<arg type='@' declared_type='CPTLayer*' index='0' name='contentLayer'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDisplacement:'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='0' name='displacement'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotation:'>
<arg type='f' declared_type='CGFloat' index='0' name='rotation'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTAnnotationHostLayer'>
<method selector='addAnnotation:'>
<arg type='@' declared_type='CPTAnnotation*' index='0' name='annotation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='annotations'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='removeAllAnnotations'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeAnnotation:'>
<arg type='@' declared_type='CPTAnnotation*' index='0' name='annotation'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTAxis'>
<method selector='addBackgroundLimitBand:'>
<arg type='@' declared_type='CPTLimitBand*' index='0' name='limitBand'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='alternatingBandFills'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='axisLabels'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='axisLineCapMax'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='axisLineCapMin'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='axisLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='axisSet'>
<retval type='@' declared_type='CPTAxisSet*'/>
</method>
<method selector='axisTitle'>
<retval type='@' declared_type='CPTAxisTitle*'/>
</method>
<method selector='backgroundLimitBands'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='coordinate'>
<retval type='i' declared_type='CPTCoordinate'/>
</method>
<method selector='defaultTitleLocation'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='drawBackgroundBandsInContext:'>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='0' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawBackgroundLimitsInContext:'>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='0' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawGridLinesInContext:isMajor:'>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='0' name='context'/>
<arg type='B' declared_type='BOOL' index='1' name='major'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='filteredMajorTickLocations:'>
<arg type='@' declared_type='NSSet*' index='0' name='allLocations'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='filteredMinorTickLocations:'>
<arg type='@' declared_type='NSSet*' index='0' name='allLocations'/>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='gridLinesRange'>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='labelAlignment'>
<retval type='i' declared_type='CPTAlignment'/>
</method>
<method selector='labelExclusionRanges'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='labelFormatter'>
<retval type='@' declared_type='NSNumberFormatter*'/>
</method>
<method selector='labelOffset'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='labelRotation'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='labelShadow'>
<retval type='@' declared_type='CPTShadow*'/>
</method>
<method selector='labelTextStyle'>
<retval type='@' declared_type='CPTTextStyle*'/>
</method>
<method selector='labelingOrigin'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='labelingPolicy'>
<retval type='i' declared_type='CPTAxisLabelingPolicy'/>
</method>
<method selector='majorGridLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='majorGridLines'>
<retval type='@' declared_type='CPTGridLines*'/>
</method>
<method selector='majorIntervalLength'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='majorTickLength'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='majorTickLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='majorTickLocations'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='minorGridLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='minorGridLines'>
<retval type='@' declared_type='CPTGridLines*'/>
</method>
<method selector='minorTickAxisLabels'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='minorTickLabelAlignment'>
<retval type='i' declared_type='CPTAlignment'/>
</method>
<method selector='minorTickLabelFormatter'>
<retval type='@' declared_type='NSNumberFormatter*'/>
</method>
<method selector='minorTickLabelOffset'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='minorTickLabelRotation'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='minorTickLabelTextStyle'>
<retval type='@' declared_type='CPTTextStyle*'/>
</method>
<method selector='minorTickLength'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='minorTickLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='minorTickLocations'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='minorTicksPerInterval'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='needsRelabel'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='plotArea'>
<retval type='@' declared_type='CPTPlotArea*'/>
</method>
<method selector='plotSpace'>
<retval type='@' declared_type='CPTPlotSpace*'/>
</method>
<method selector='preferredNumberOfMajorTicks'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='relabel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeBackgroundLimitBand:'>
<arg type='@' declared_type='CPTLimitBand*' index='0' name='limitBand'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='separateLayers'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAlternatingBandFills:'>
<arg type='@' declared_type='NSArray*' index='0' name='alternatingBandFills'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAxisLabels:'>
<arg type='@' declared_type='NSSet*' index='0' name='axisLabels'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAxisLineCapMax:'>
<arg type='@' declared_type='CPTLineCap*' index='0' name='axisLineCapMax'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAxisLineCapMin:'>
<arg type='@' declared_type='CPTLineCap*' index='0' name='axisLineCapMin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAxisLineStyle:'>
<arg type='@' declared_type='CPTLineStyle*' index='0' name='axisLineStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAxisTitle:'>
<arg type='@' declared_type='CPTAxisTitle*' index='0' name='axisTitle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCoordinate:'>
<arg type='i' declared_type='CPTCoordinate' index='0' name='coordinate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGridLinesRange:'>
<arg type='@' declared_type='CPTPlotRange*' index='0' name='gridLinesRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelAlignment:'>
<arg type='i' declared_type='CPTAlignment' index='0' name='labelAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelExclusionRanges:'>
<arg type='@' declared_type='NSArray*' index='0' name='labelExclusionRanges'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelFormatter:'>
<arg type='@' declared_type='NSNumberFormatter*' index='0' name='labelFormatter'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelOffset:'>
<arg type='f' declared_type='CGFloat' index='0' name='labelOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelRotation:'>
<arg type='f' declared_type='CGFloat' index='0' name='labelRotation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelShadow:'>
<arg type='@' declared_type='CPTShadow*' index='0' name='labelShadow'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelTextStyle:'>
<arg type='@' declared_type='CPTTextStyle*' index='0' name='labelTextStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelingOrigin:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' index='0' name='labelingOrigin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelingPolicy:'>
<arg type='i' declared_type='CPTAxisLabelingPolicy' index='0' name='labelingPolicy'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMajorGridLineStyle:'>
<arg type='@' declared_type='CPTLineStyle*' index='0' name='majorGridLineStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMajorIntervalLength:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' index='0' name='majorIntervalLength'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMajorTickLength:'>
<arg type='f' declared_type='CGFloat' index='0' name='majorTickLength'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMajorTickLineStyle:'>
<arg type='@' declared_type='CPTLineStyle*' index='0' name='majorTickLineStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMajorTickLocations:'>
<arg type='@' declared_type='NSSet*' index='0' name='majorTickLocations'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorGridLineStyle:'>
<arg type='@' declared_type='CPTLineStyle*' index='0' name='minorGridLineStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorTickAxisLabels:'>
<arg type='@' declared_type='NSSet*' index='0' name='minorTickAxisLabels'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorTickLabelAlignment:'>
<arg type='i' declared_type='CPTAlignment' index='0' name='minorTickLabelAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorTickLabelFormatter:'>
<arg type='@' declared_type='NSNumberFormatter*' index='0' name='minorTickLabelFormatter'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorTickLabelOffset:'>
<arg type='f' declared_type='CGFloat' index='0' name='minorTickLabelOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorTickLabelRotation:'>
<arg type='f' declared_type='CGFloat' index='0' name='minorTickLabelRotation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorTickLabelTextStyle:'>
<arg type='@' declared_type='CPTTextStyle*' index='0' name='minorTickLabelTextStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorTickLength:'>
<arg type='f' declared_type='CGFloat' index='0' name='minorTickLength'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorTickLineStyle:'>
<arg type='@' declared_type='CPTLineStyle*' index='0' name='minorTickLineStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorTickLocations:'>
<arg type='@' declared_type='NSSet*' index='0' name='minorTickLocations'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorTicksPerInterval:'>
<arg type='I' declared_type='NSUInteger' index='0' name='minorTicksPerInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNeedsRelabel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotArea:'>
<arg type='@' declared_type='CPTPlotArea*' index='0' name='plotArea'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotSpace:'>
<arg type='@' declared_type='CPTPlotSpace*' index='0' name='plotSpace'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreferredNumberOfMajorTicks:'>
<arg type='I' declared_type='NSUInteger' index='0' name='preferredNumberOfMajorTicks'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSeparateLayers:'>
<arg type='B' declared_type='BOOL' index='0' name='separateLayers'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTickDirection:'>
<arg type='i' declared_type='CPTSign' index='0' name='tickDirection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg type='@' declared_type='NSString*' index='0' name='title'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleLocation:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' index='0' name='titleLocation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleOffset:'>
<arg type='f' declared_type='CGFloat' index='0' name='titleOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleRotation:'>
<arg type='f' declared_type='CGFloat' index='0' name='titleRotation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleTextStyle:'>
<arg type='@' declared_type='CPTTextStyle*' index='0' name='titleTextStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVisibleAxisRange:'>
<arg type='@' declared_type='CPTPlotRange*' index='0' name='visibleAxisRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVisibleRange:'>
<arg type='@' declared_type='CPTPlotRange*' index='0' name='visibleRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tickDirection'>
<retval type='i' declared_type='CPTSign'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='titleLocation'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='titleOffset'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='titleRotation'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='titleTextStyle'>
<retval type='@' declared_type='CPTTextStyle*'/>
</method>
<method selector='updateMajorTickLabels'>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateMinorTickLabels'>
<retval type='v' declared_type='void'/>
</method>
<method selector='viewPointForCoordinateDecimalNumber:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' index='0' name='coordinateDecimalNumber'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='visibleAxisRange'>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='visibleRange'>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
</class>
<class name='CPTAxisLabel'>
<method selector='alignment'>
<retval type='i' declared_type='CPTAlignment'/>
</method>
<method selector='contentLayer'>
<retval type='@' declared_type='CPTLayer*'/>
</method>
<method selector='initWithContentLayer:'>
<arg type='@' declared_type='CPTLayer*' index='0' name='layer'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithText:textStyle:'>
<arg type='@' declared_type='NSString*' index='0' name='newText'/>
<arg type='@' declared_type='CPTTextStyle*' index='1' name='style'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='offset'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='positionBetweenViewPoint:andViewPoint:forCoordinate:inDirection:'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='0' name='firstPoint'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='1' name='secondPoint'/>
<arg type='i' declared_type='CPTCoordinate' index='2' name='coordinate'/>
<arg type='i' declared_type='CPTSign' index='3' name='direction'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='positionRelativeToViewPoint:forCoordinate:inDirection:'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='0' name='point'/>
<arg type='i' declared_type='CPTCoordinate' index='1' name='coordinate'/>
<arg type='i' declared_type='CPTSign' index='2' name='direction'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rotation'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setAlignment:'>
<arg type='i' declared_type='CPTAlignment' index='0' name='alignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentLayer:'>
<arg type='@' declared_type='CPTLayer*' index='0' name='contentLayer'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOffset:'>
<arg type='f' declared_type='CGFloat' index='0' name='offset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRotation:'>
<arg type='f' declared_type='CGFloat' index='0' name='rotation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTickLocation:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' index='0' name='tickLocation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tickLocation'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
</class>
<class name='CPTAxisSet'>
<method selector='axes'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='axisForCoordinate:atIndex:'>
<arg type='i' declared_type='CPTCoordinate' index='0' name='coordinate'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTAxis*'/>
</method>
<method selector='borderLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='relabelAxes'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAxes:'>
<arg type='@' declared_type='NSArray*' index='0' name='axes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBorderLineStyle:'>
<arg type='@' declared_type='CPTLineStyle*' index='0' name='borderLineStyle'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTBarPlot'>
<method selector='barBaseCornerRadius'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='barBasesVary'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='barCornerRadius'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='barOffset'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='barOffsetScale'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='barWidth'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='barWidthScale'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='barWidthsAreInViewCoordinates'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='barsAreHorizontal'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='baseValue'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='fill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='lineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='plotRange'>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='plotRangeEnclosingBars'>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='setBarBaseCornerRadius:'>
<arg type='f' declared_type='CGFloat' index='0' name='barBaseCornerRadius'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarBasesVary:'>
<arg type='B' declared_type='BOOL' index='0' name='barBasesVary'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarCornerRadius:'>
<arg type='f' declared_type='CGFloat' index='0' name='barCornerRadius'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarOffset:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' index='0' name='barOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarOffsetScale:'>
<arg type='f' declared_type='CGFloat' index='0' name='barOffsetScale'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarWidth:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' index='0' name='barWidth'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarWidthScale:'>
<arg type='f' declared_type='CGFloat' index='0' name='barWidthScale'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarWidthsAreInViewCoordinates:'>
<arg type='B' declared_type='BOOL' index='0' name='barWidthsAreInViewCoordinates'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarsAreHorizontal:'>
<arg type='B' declared_type='BOOL' index='0' name='barsAreHorizontal'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBaseValue:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' index='0' name='baseValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFill:'>
<arg type='@' declared_type='CPTFill*' index='0' name='fill'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineStyle:'>
<arg type='@' declared_type='CPTLineStyle*' index='0' name='lineStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotRange:'>
<arg type='@' declared_type='CPTPlotRange*' index='0' name='plotRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tubularBarPlotWithColor:horizontalBars:' class_method='true'>
<arg type='@' declared_type='CPTColor*' index='0' name='color'/>
<arg type='B' declared_type='BOOL' index='1' name='horizontal'/>
<retval type='@' declared_type='CPTBarPlot*'/>
</method>
</class>
<class name='CPTBorderLayer'>
<method selector='maskedLayer'>
<retval type='@' declared_type='CPTBorderedLayer*'/>
</method>
<method selector='setMaskedLayer:'>
<arg type='@' declared_type='CPTBorderedLayer*' index='0' name='maskedLayer'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTBorderedLayer'>
<method selector='borderLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='fill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='inLayout'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='renderBorderedLayer:asVectorInContext:'>
<arg type='@' declared_type='CPTBorderedLayer*' index='0' name='layer'/>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='1' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBorderLineStyle:'>
<arg type='@' declared_type='CPTLineStyle*' index='0' name='borderLineStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFill:'>
<arg type='@' declared_type='CPTFill*' index='0' name='fill'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInLayout:'>
<arg type='B' declared_type='BOOL' index='0' name='inLayout'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTCalendarFormatter'>
<method selector='dateFormatter'>
<retval type='@' declared_type='NSDateFormatter*'/>
</method>
<method selector='initWithDateFormatter:'>
<arg type='@' declared_type='NSDateFormatter*' index='0' name='aDateFormatter'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='referenceCalendar'>
<retval type='@' declared_type='NSCalendar*'/>
</method>
<method selector='referenceCalendarUnit'>
<retval type='I' declared_type='NSCalendarUnit'/>
</method>
<method selector='referenceDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='setDateFormatter:'>
<arg type='@' declared_type='NSDateFormatter*' index='0' name='dateFormatter'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReferenceCalendar:'>
<arg type='@' declared_type='NSCalendar*' index='0' name='referenceCalendar'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReferenceCalendarUnit:'>
<arg type='I' declared_type='NSCalendarUnit' index='0' name='referenceCalendarUnit'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReferenceDate:'>
<arg type='@' declared_type='NSDate*' index='0' name='referenceDate'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTColor'>
<method selector='blackColor' class_method='true'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='blueColor' class_method='true'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='brownColor' class_method='true'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='cgColor'>
<retval type='^{CGColor=}' declared_type='CGColorRef'/>
</method>
<method selector='clearColor' class_method='true'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='colorWithAlphaComponent:'>
<arg type='f' declared_type='CGFloat' index='0' name='alpha'/>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='colorWithCGColor:' class_method='true'>
<arg type='^{CGColor=}' declared_type='CGColorRef' index='0' name='newCGColor'/>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='colorWithComponentRed:green:blue:alpha:' class_method='true'>
<arg type='f' declared_type='CGFloat' index='0' name='red'/>
<arg type='f' declared_type='CGFloat' index='1' name='green'/>
<arg type='f' declared_type='CGFloat' index='2' name='blue'/>
<arg type='f' declared_type='CGFloat' index='3' name='alpha'/>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='colorWithGenericGray:' class_method='true'>
<arg type='f' declared_type='CGFloat' index='0' name='gray'/>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='cyanColor' class_method='true'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='darkGrayColor' class_method='true'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='grayColor' class_method='true'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='greenColor' class_method='true'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='initWithCGColor:'>
<arg type='^{CGColor=}' declared_type='CGColorRef' index='0' name='cgColor'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithComponentRed:green:blue:alpha:'>
<arg type='f' declared_type='CGFloat' index='0' name='red'/>
<arg type='f' declared_type='CGFloat' index='1' name='green'/>
<arg type='f' declared_type='CGFloat' index='2' name='blue'/>
<arg type='f' declared_type='CGFloat' index='3' name='alpha'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lightGrayColor' class_method='true'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='magentaColor' class_method='true'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='orangeColor' class_method='true'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='purpleColor' class_method='true'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='redColor' class_method='true'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='uiColor'>
<retval type='@' declared_type='UIColor*'/>
</method>
<method selector='whiteColor' class_method='true'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='yellowColor' class_method='true'>
<retval type='@' declared_type='CPTColor*'/>
</method>
</class>
<class name='CPTColorSpace'>
<method selector='cgColorSpace'>
<retval type='^{CGColorSpace=}' declared_type='CGColorSpaceRef'/>
</method>
<method selector='genericRGBSpace' class_method='true'>
<retval type='@' declared_type='CPTColorSpace*'/>
</method>
<method selector='initWithCGColorSpace:'>
<arg type='^{CGColorSpace=}' declared_type='CGColorSpaceRef' index='0' name='colorSpace'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CPTConstraints'>
<method selector='constraintWithLowerOffset:' class_method='true'>
<arg type='f' declared_type='CGFloat' index='0' name='newOffset'/>
<retval type='@' declared_type='CPTConstraints*'/>
</method>
<method selector='constraintWithRelativeOffset:' class_method='true'>
<arg type='f' declared_type='CGFloat' index='0' name='newOffset'/>
<retval type='@' declared_type='CPTConstraints*'/>
</method>
<method selector='constraintWithUpperOffset:' class_method='true'>
<arg type='f' declared_type='CGFloat' index='0' name='newOffset'/>
<retval type='@' declared_type='CPTConstraints*'/>
</method>
<method selector='initWithLowerOffset:'>
<arg type='f' declared_type='CGFloat' index='0' name='newOffset'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithRelativeOffset:'>
<arg type='f' declared_type='CGFloat' index='0' name='newOffset'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUpperOffset:'>
<arg type='f' declared_type='CGFloat' index='0' name='newOffset'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToConstraint:'>
<arg type='@' declared_type='CPTConstraints*' index='0' name='otherConstraint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='positionForLowerBound:upperBound:'>
<arg type='f' declared_type='CGFloat' index='0' name='lowerBound'/>
<arg type='f' declared_type='CGFloat' index='1' name='upperBound'/>
<retval type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='CPTFill'>
<method selector='fillPathInContext:'>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='0' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fillRect:inContext:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0' name='rect'/>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='1' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fillWithColor:' class_method='true'>
<arg type='@' declared_type='CPTColor*' index='0' name='aColor'/>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='fillWithGradient:' class_method='true'>
<arg type='@' declared_type='CPTGradient*' index='0' name='aGradient'/>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='fillWithImage:' class_method='true'>
<arg type='@' declared_type='CPTImage*' index='0' name='anImage'/>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='initWithColor:'>
<arg type='@' declared_type='CPTColor*' index='0' name='aColor'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithGradient:'>
<arg type='@' declared_type='CPTGradient*' index='0' name='aGradient'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithImage:'>
<arg type='@' declared_type='CPTImage*' index='0' name='anImage'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CPTGradient'>
<method selector='addColorStop:atPosition:'>
<arg type='@' declared_type='CPTColor*' index='0' name='color'/>
<arg type='f' declared_type='CGFloat' index='1' name='position'/>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='angle'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='aquaNormalGradient' class_method='true'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='aquaPressedGradient' class_method='true'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='aquaSelectedGradient' class_method='true'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='blendingMode'>
<retval type='i' declared_type='CPTGradientBlendingMode'/>
</method>
<method selector='drawSwatchInRect:inContext:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0' name='rect'/>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='1' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fillPathInContext:'>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='0' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fillRect:inContext:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0' name='rect'/>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='1' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='gradientType'>
<retval type='i' declared_type='CPTGradientType'/>
</method>
<method selector='gradientWithAlphaComponent:'>
<arg type='f' declared_type='CGFloat' index='0' name='alpha'/>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='gradientWithBeginningColor:endingColor:' class_method='true'>
<arg type='@' declared_type='CPTColor*' index='0' name='begin'/>
<arg type='@' declared_type='CPTColor*' index='1' name='end'/>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='gradientWithBeginningColor:endingColor:beginningPosition:endingPosition:' class_method='true'>
<arg type='@' declared_type='CPTColor*' index='0' name='begin'/>
<arg type='@' declared_type='CPTColor*' index='1' name='end'/>
<arg type='f' declared_type='CGFloat' index='2' name='beginningPosition'/>
<arg type='f' declared_type='CGFloat' index='3' name='endingPosition'/>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='gradientWithBlendingMode:'>
<arg type='i' declared_type='CPTGradientBlendingMode' index='0' name='mode'/>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='hydrogenSpectrumGradient' class_method='true'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='newColorAtPosition:'>
<arg type='f' declared_type='CGFloat' index='0' name='position'/>
<retval type='^{CGColor=}' declared_type='CGColorRef'/>
</method>
<method selector='newColorStopAtIndex:'>
<arg type='I' declared_type='NSUInteger' index='0' name='idx'/>
<retval type='^{CGColor=}' declared_type='CGColorRef'/>
</method>
<method selector='rainbowGradient' class_method='true'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='removeColorStopAtIndex:'>
<arg type='I' declared_type='NSUInteger' index='0' name='idx'/>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='removeColorStopAtPosition:'>
<arg type='f' declared_type='CGFloat' index='0' name='position'/>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='setAngle:'>
<arg type='f' declared_type='CGFloat' index='0' name='angle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGradientType:'>
<arg type='i' declared_type='CPTGradientType' index='0' name='gradientType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sourceListSelectedGradient' class_method='true'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='sourceListUnselectedGradient' class_method='true'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='unifiedDarkGradient' class_method='true'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='unifiedNormalGradient' class_method='true'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='unifiedPressedGradient' class_method='true'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
<method selector='unifiedSelectedGradient' class_method='true'>
<retval type='@' declared_type='CPTGradient*'/>
</method>
</class>
<class name='CPTGraph'>
<method selector='addPlot:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addPlot:toPlotSpace:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='@' declared_type='CPTPlotSpace*' index='1' name='space'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='addPlotSpace:'>
<arg type='@' declared_type='CPTPlotSpace*' index='0' name='space'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allPlotSpaces'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='allPlots'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='applyTheme:'>
<arg type='@' declared_type='CPTTheme*' index='0' name='theme'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='axisSet'>
<retval type='@' declared_type='CPTAxisSet*'/>
</method>
<method selector='defaultPlotSpace'>
<retval type='@' declared_type='CPTPlotSpace*'/>
</method>
<method selector='hostingView'>
<retval type='@' declared_type='CPTGraphHostingView*'/>
</method>
<method selector='insertPlot:atIndex:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertPlot:atIndex:intoPlotSpace:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<arg type='@' declared_type='CPTPlotSpace*' index='2' name='space'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='legend'>
<retval type='@' declared_type='CPTLegend*'/>
</method>
<method selector='legendAnchor'>
<retval type='i' declared_type='CPTRectAnchor'/>
</method>
<method selector='legendDisplacement'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='newAxisSet'>
<retval type='@' declared_type='CPTAxisSet*'/>
</method>
<method selector='newPlotSpace'>
<retval type='@' declared_type='CPTPlotSpace*'/>
</method>
<method selector='plotAreaFrame'>
<retval type='@' declared_type='CPTPlotAreaFrame*'/>
</method>
<method selector='plotAtIndex:'>
<arg type='I' declared_type='NSUInteger' index='0' name='idx'/>
<retval type='@' declared_type='CPTPlot*'/>
</method>
<method selector='plotSpaceAtIndex:'>
<arg type='I' declared_type='NSUInteger' index='0' name='idx'/>
<retval type='@' declared_type='CPTPlotSpace*'/>
</method>
<method selector='plotSpaceWithIdentifier:'>
<arg type='@' declared_type='id' index='0' name='identifier'/>
<retval type='@' declared_type='CPTPlotSpace*'/>
</method>
<method selector='plotWithIdentifier:'>
<arg type='@' declared_type='id' index='0' name='identifier'/>
<retval type='@' declared_type='CPTPlot*'/>
</method>
<method selector='reloadData'>
<retval type='v' declared_type='void'/>
</method>
<method selector='reloadDataIfNeeded'>
<retval type='v' declared_type='void'/>
</method>
<method selector='removePlot:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removePlotSpace:'>
<arg type='@' declared_type='CPTPlotSpace*' index='0' name='plotSpace'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removePlotWithIdentifier:'>
<arg type='@' declared_type='id' index='0' name='identifier'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAxisSet:'>
<arg type='@' declared_type='CPTAxisSet*' index='0' name='axisSet'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHostingView:'>
<arg type='@' declared_type='CPTGraphHostingView*' index='0' name='hostingView'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLegend:'>
<arg type='@' declared_type='CPTLegend*' index='0' name='legend'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLegendAnchor:'>
<arg type='i' declared_type='CPTRectAnchor' index='0' name='legendAnchor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLegendDisplacement:'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='0' name='legendDisplacement'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotAreaFrame:'>
<arg type='@' declared_type='CPTPlotAreaFrame*' index='0' name='plotAreaFrame'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg type='@' declared_type='NSString*' index='0' name='title'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleDisplacement:'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='0' name='titleDisplacement'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitlePlotAreaFrameAnchor:'>
<arg type='i' declared_type='CPTRectAnchor' index='0' name='titlePlotAreaFrameAnchor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleTextStyle:'>
<arg type='@' declared_type='CPTTextStyle*' index='0' name='titleTextStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTopDownLayerOrder:'>
<arg type='@' declared_type='NSArray*' index='0' name='topDownLayerOrder'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='titleDisplacement'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='titlePlotAreaFrameAnchor'>
<retval type='i' declared_type='CPTRectAnchor'/>
</method>
<method selector='titleTextStyle'>
<retval type='@' declared_type='CPTTextStyle*'/>
</method>
<method selector='topDownLayerOrder'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='CPTGraphHostingView'>
<method selector='allowPinchScaling'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='collapsesLayers'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hostedGraph'>
<retval type='@' declared_type='CPTGraph*'/>
</method>
<method selector='setAllowPinchScaling:'>
<arg type='B' declared_type='BOOL' index='0' name='allowPinchScaling'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCollapsesLayers:'>
<arg type='B' declared_type='BOOL' index='0' name='collapsesLayers'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setHostedGraph:'>
<arg type='@' declared_type='CPTGraph*' index='0' name='hostedGraph'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTGridLineGroup'>
<method selector='major'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='plotArea'>
<retval type='@' declared_type='CPTPlotArea*'/>
</method>
<method selector='setMajor:'>
<arg type='B' declared_type='BOOL' index='0' name='major'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotArea:'>
<arg type='@' declared_type='CPTPlotArea*' index='0' name='plotArea'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTGridLines'>
<method selector='axis'>
<retval type='@' declared_type='CPTAxis*'/>
</method>
<method selector='major'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setAxis:'>
<arg type='@' declared_type='CPTAxis*' index='0' name='axis'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMajor:'>
<arg type='B' declared_type='BOOL' index='0' name='major'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTImage'>
<method selector='drawInRect:inContext:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0' name='rect'/>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='1' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='image'>
<retval type='^{CGImage=}' declared_type='CGImageRef'/>
</method>
<method selector='imageForPNGFile:' class_method='true'>
<arg type='@' declared_type='NSString*' index='0' name='path'/>
<retval type='@' declared_type='CPTImage*'/>
</method>
<method selector='imageWithCGImage:' class_method='true'>
<arg type='^{CGImage=}' declared_type='CGImageRef' index='0' name='anImage'/>
<retval type='@' declared_type='CPTImage*'/>
</method>
<method selector='imageWithCGImage:scale:' class_method='true'>
<arg type='^{CGImage=}' declared_type='CGImageRef' index='0' name='anImage'/>
<arg type='f' declared_type='CGFloat' index='1' name='newScale'/>
<retval type='@' declared_type='CPTImage*'/>
</method>
<method selector='initForPNGFile:'>
<arg type='@' declared_type='NSString*' index='0' name='path'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCGImage:'>
<arg type='^{CGImage=}' declared_type='CGImageRef' index='0' name='anImage'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithCGImage:scale:'>
<arg type='^{CGImage=}' declared_type='CGImageRef' index='0' name='anImage'/>
<arg type='f' declared_type='CGFloat' index='1' name='newScale'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isTiled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='scale'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setImage:'>
<arg type='^{CGImage=}' declared_type='CGImageRef' index='0' name='image'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScale:'>
<arg type='f' declared_type='CGFloat' index='0' name='scale'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTileAnchoredToContext:'>
<arg type='B' declared_type='BOOL' index='0' name='tileAnchoredToContext'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTiled:'>
<arg type='B' declared_type='BOOL' index='0' name='tiled'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tileAnchoredToContext'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CPTLayer'>
<method selector='applyMaskToContext:'>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='0' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applySublayerMaskToContext:forSublayer:withOffset:'>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='0' name='context'/>
<arg type='@' declared_type='CPTLayer*' index='1' name='sublayer'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='2' name='offset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='contentsScale'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='dataForPDFRepresentationOfLayer'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='graph'>
<retval type='@' declared_type='CPTGraph*'/>
</method>
<method selector='identifier'>
<retval type='@' declared_type='id'/>
</method>
<method selector='imageOfLayer'>
<retval type='^{UIImage=#^vf{?=b1b3b1b1b1b16}}' declared_type='UIImage*'/>
</method>
<method selector='initWithFrame:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0' name='newFrame'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='innerBorderPath'>
<retval type='^{CGPath=}' declared_type='CGPathRef'/>
</method>
<method selector='layoutAndRenderInContext:'>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='0' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='logLayers'>
<retval type='v' declared_type='void'/>
</method>
<method selector='maskingPath'>
<retval type='^{CGPath=}' declared_type='CGPathRef'/>
</method>
<method selector='masksToBorder'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='outerBorderPath'>
<retval type='^{CGPath=}' declared_type='CGPathRef'/>
</method>
<method selector='paddingBottom'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='paddingLeft'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='paddingRight'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='paddingTop'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='pixelAlign'>
<retval type='v' declared_type='void'/>
</method>
<method selector='recursivelyRenderInContext:'>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='0' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='renderAsVectorInContext:'>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='0' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContentsScale:'>
<arg type='f' declared_type='CGFloat' index='0' name='contentsScale'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGraph:'>
<arg type='@' declared_type='CPTGraph*' index='0' name='graph'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIdentifier:'>
<arg type='@' declared_type='id' index='0' name='identifier'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInnerBorderPath:'>
<arg type='^{CGPath=}' declared_type='CGPathRef' index='0' name='innerBorderPath'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMasksToBorder:'>
<arg type='B' declared_type='BOOL' index='0' name='masksToBorder'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOuterBorderPath:'>
<arg type='^{CGPath=}' declared_type='CGPathRef' index='0' name='outerBorderPath'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPaddingBottom:'>
<arg type='f' declared_type='CGFloat' index='0' name='paddingBottom'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPaddingLeft:'>
<arg type='f' declared_type='CGFloat' index='0' name='paddingLeft'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPaddingRight:'>
<arg type='f' declared_type='CGFloat' index='0' name='paddingRight'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPaddingTop:'>
<arg type='f' declared_type='CGFloat' index='0' name='paddingTop'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShadow:'>
<arg type='@' declared_type='CPTShadow*' index='0' name='shadow'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shadow'>
<retval type='@' declared_type='CPTShadow*'/>
</method>
<method selector='sublayerMarginLeft:top:right:bottom:'>
<arg type='^f' declared_type='CGFloat*' index='0' name='left'/>
<arg type='^f' declared_type='CGFloat*' index='1' name='top'/>
<arg type='^f' declared_type='CGFloat*' index='2' name='right'/>
<arg type='^f' declared_type='CGFloat*' index='3' name='bottom'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sublayerMaskingPath'>
<retval type='^{CGPath=}' declared_type='CGPathRef'/>
</method>
<method selector='sublayersExcludedFromAutomaticLayout'>
<retval type='@' declared_type='NSSet*'/>
</method>
<method selector='useFastRendering'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CPTLayerAnnotation'>
<method selector='anchorLayer'>
<retval type='@' declared_type='CPTLayer*'/>
</method>
<method selector='initWithAnchorLayer:'>
<arg type='@' declared_type='CPTLayer*' index='0' name='anchorLayer'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='rectAnchor'>
<retval type='i' declared_type='CPTRectAnchor'/>
</method>
<method selector='setRectAnchor:'>
<arg type='i' declared_type='CPTRectAnchor' index='0' name='rectAnchor'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTLegend'>
<method selector='addPlot:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allPlots'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='columnMargin'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='columnWidths'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='columnWidthsThatFit'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='equalColumns'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='equalRows'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithGraph:'>
<arg type='@' declared_type='CPTGraph*' index='0' name='graph'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithPlots:'>
<arg type='@' declared_type='NSArray*' index='0' name='newPlots'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='insertPlot:atIndex:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='layoutChanged'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='legendWithGraph:' class_method='true'>
<arg type='@' declared_type='CPTGraph*' index='0' name='graph'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='legendWithPlots:' class_method='true'>
<arg type='@' declared_type='NSArray*' index='0' name='newPlots'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='numberOfColumns'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='numberOfRows'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='plotAtIndex:'>
<arg type='I' declared_type='NSUInteger' index='0' name='idx'/>
<retval type='@' declared_type='CPTPlot*'/>
</method>
<method selector='plotWithIdentifier:'>
<arg type='@' declared_type='id' index='0' name='identifier'/>
<retval type='@' declared_type='CPTPlot*'/>
</method>
<method selector='removePlot:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removePlotWithIdentifier:'>
<arg type='@' declared_type='id' index='0' name='identifier'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rowHeights'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='rowHeightsThatFit'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='rowMargin'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setColumnMargin:'>
<arg type='f' declared_type='CGFloat' index='0' name='columnMargin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setColumnWidths:'>
<arg type='@' declared_type='NSArray*' index='0' name='columnWidths'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEqualColumns:'>
<arg type='B' declared_type='BOOL' index='0' name='equalColumns'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEqualRows:'>
<arg type='B' declared_type='BOOL' index='0' name='equalRows'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLayoutChanged'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfColumns:'>
<arg type='I' declared_type='NSUInteger' index='0' name='numberOfColumns'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfRows:'>
<arg type='I' declared_type='NSUInteger' index='0' name='numberOfRows'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRowHeights:'>
<arg type='@' declared_type='NSArray*' index='0' name='rowHeights'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRowMargin:'>
<arg type='f' declared_type='CGFloat' index='0' name='rowMargin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSwatchBorderLineStyle:'>
<arg type='@' declared_type='CPTLineStyle*' index='0' name='swatchBorderLineStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSwatchCornerRadius:'>
<arg type='f' declared_type='CGFloat' index='0' name='swatchCornerRadius'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSwatchFill:'>
<arg type='@' declared_type='CPTFill*' index='0' name='swatchFill'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSwatchSize:'>
<arg type='{CGSize=ff}' declared_type='CGSize' index='0' name='swatchSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextStyle:'>
<arg type='@' declared_type='CPTTextStyle*' index='0' name='textStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitleOffset:'>
<arg type='f' declared_type='CGFloat' index='0' name='titleOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='swatchBorderLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='swatchCornerRadius'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='swatchFill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='swatchSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='textStyle'>
<retval type='@' declared_type='CPTTextStyle*'/>
</method>
<method selector='titleOffset'>
<retval type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='CPTLegendEntry'>
<method selector='column'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='drawTitleInRect:inContext:scale:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0' name='rect'/>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='1' name='context'/>
<arg type='f' declared_type='CGFloat' index='2' name='scale'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='index'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='plot'>
<retval type='@' declared_type='CPTPlot*'/>
</method>
<method selector='row'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='setColumn:'>
<arg type='I' declared_type='NSUInteger' index='0' name='column'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIndex:'>
<arg type='I' declared_type='NSUInteger' index='0' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlot:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRow:'>
<arg type='I' declared_type='NSUInteger' index='0' name='row'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextStyle:'>
<arg type='@' declared_type='CPTTextStyle*' index='0' name='textStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textStyle'>
<retval type='@' declared_type='CPTTextStyle*'/>
</method>
<method selector='titleSize'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
</class>
<class name='CPTLimitBand'>
<method selector='fill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='initWithRange:fill:'>
<arg type='@' declared_type='CPTPlotRange*' index='0' name='newRange'/>
<arg type='@' declared_type='CPTFill*' index='1' name='newFill'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='limitBandWithRange:fill:' class_method='true'>
<arg type='@' declared_type='CPTPlotRange*' index='0' name='newRange'/>
<arg type='@' declared_type='CPTFill*' index='1' name='newFill'/>
<retval type='@' declared_type='CPTLimitBand*'/>
</method>
<method selector='range'>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='setFill:'>
<arg type='@' declared_type='CPTFill*' index='0' name='fill'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRange:'>
<arg type='@' declared_type='CPTPlotRange*' index='0' name='range'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTLineCap'>
<method selector='barPlotLineCap' class_method='true'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='crossPlotLineCap' class_method='true'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='customLineCapPath'>
<retval type='^{CGPath=}' declared_type='CGPathRef'/>
</method>
<method selector='customLineCapWithPath:' class_method='true'>
<arg type='^{CGPath=}' declared_type='CGPathRef' index='0' name='aPath'/>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='diamondPlotLineCap' class_method='true'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='ellipsePlotLineCap' class_method='true'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='fill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='hexagonPlotLineCap' class_method='true'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='lineCap' class_method='true'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='lineCapType'>
<retval type='i' declared_type='CPTLineCapType'/>
</method>
<method selector='lineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='openArrowPlotLineCap' class_method='true'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='pentagonPlotLineCap' class_method='true'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='rectanglePlotLineCap' class_method='true'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='renderAsVectorInContext:atPoint:inDirection:'>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='0' name='context'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='1' name='center'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='2' name='direction'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCustomLineCapPath:'>
<arg type='^{CGPath=}' declared_type='CGPathRef' index='0' name='customLineCapPath'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFill:'>
<arg type='@' declared_type='CPTFill*' index='0' name='fill'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineCapType:'>
<arg type='i' declared_type='CPTLineCapType' index='0' name='lineCapType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineStyle:'>
<arg type='@' declared_type='CPTLineStyle*' index='0' name='lineStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSize:'>
<arg type='{CGSize=ff}' declared_type='CGSize' index='0' name='size'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesEvenOddClipRule:'>
<arg type='B' declared_type='BOOL' index='0' name='usesEvenOddClipRule'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='size'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='snowPlotLineCap' class_method='true'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='solidArrowPlotLineCap' class_method='true'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='sweptArrowPlotLineCap' class_method='true'>
<retval type='@' declared_type='CPTLineCap*'/>
</method>
<method selector='usesEvenOddClipRule'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CPTLineStyle'>
<method selector='dashPattern'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='lineCap'>
<retval type='i' declared_type='CGLineCap'/>
</method>
<method selector='lineColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='lineFill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='lineJoin'>
<retval type='i' declared_type='CGLineJoin'/>
</method>
<method selector='lineStyle' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='lineWidth'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='miterLimit'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='patternPhase'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setLineStyleInContext:'>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='0' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='strokePathInContext:'>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='0' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='strokeRect:inContext:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0' name='rect'/>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='1' name='context'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTMutableLineStyle'>
<method selector='dashPattern'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='lineCap'>
<retval type='i' declared_type='CGLineCap'/>
</method>
<method selector='lineColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='lineFill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='lineJoin'>
<retval type='i' declared_type='CGLineJoin'/>
</method>
<method selector='lineWidth'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='miterLimit'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='patternPhase'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setDashPattern:'>
<arg type='@' declared_type='NSArray*' index='0' name='dashPattern'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineCap:'>
<arg type='i' declared_type='CGLineCap' index='0' name='lineCap'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineColor:'>
<arg type='@' declared_type='CPTColor*' index='0' name='lineColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineFill:'>
<arg type='@' declared_type='CPTFill*' index='0' name='lineFill'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineJoin:'>
<arg type='i' declared_type='CGLineJoin' index='0' name='lineJoin'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineWidth:'>
<arg type='f' declared_type='CGFloat' index='0' name='lineWidth'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMiterLimit:'>
<arg type='f' declared_type='CGFloat' index='0' name='miterLimit'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPatternPhase:'>
<arg type='f' declared_type='CGFloat' index='0' name='patternPhase'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTMutableNumericData'>
<method selector='byteOrder'>
<retval type='l' declared_type='CFByteOrder'/>
</method>
<method selector='convertToType:sampleBytes:byteOrder:'>
<arg type='i' declared_type='CPTDataTypeFormat' index='0' name='newDataType'/>
<arg type='L' declared_type='size_t' index='1' name='newSampleBytes'/>
<arg type='l' declared_type='CFByteOrder' index='2' name='newByteOrder'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dataType'>
<retval type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType'/>
</method>
<method selector='dataTypeFormat'>
<retval type='i' declared_type='CPTDataTypeFormat'/>
</method>
<method selector='mutableBytes'>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='sampleBytes'>
<retval type='L' declared_type='size_t'/>
</method>
<method selector='setByteOrder:'>
<arg type='l' declared_type='CFByteOrder' index='0' name='byteOrder'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDataType:'>
<arg type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType' index='0' name='dataType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDataTypeFormat:'>
<arg type='i' declared_type='CPTDataTypeFormat' index='0' name='dataTypeFormat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSampleBytes:'>
<arg type='L' declared_type='size_t' index='0' name='sampleBytes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShape:'>
<arg type='@' declared_type='NSArray*' index='0' name='shape'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shape'>
<retval type='@' declared_type='NSArray*'/>
</method>
</class>
<class name='CPTMutablePlotRange'>
<method selector='expandRangeByFactor:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' index='0' name='factor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='intersectionPlotRange:'>
<arg type='@' declared_type='CPTPlotRange*' index='0' name='otherRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='length'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='location'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='setLength:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' index='0' name='length'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLocation:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' index='0' name='location'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shiftEndToFitInRange:'>
<arg type='@' declared_type='CPTPlotRange*' index='0' name='otherRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shiftLocationToFitInRange:'>
<arg type='@' declared_type='CPTPlotRange*' index='0' name='otherRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unionPlotRange:'>
<arg type='@' declared_type='CPTPlotRange*' index='0' name='otherRange'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTMutableShadow'>
<method selector='setShadowBlurRadius:'>
<arg type='f' declared_type='CGFloat' index='0' name='shadowBlurRadius'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShadowColor:'>
<arg type='@' declared_type='CPTColor*' index='0' name='shadowColor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShadowOffset:'>
<arg type='{CGSize=ff}' declared_type='CGSize' index='0' name='shadowOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shadowBlurRadius'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='shadowColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='shadowOffset'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
</class>
<class name='CPTMutableTextStyle'>
<method selector='color'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='fontName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fontSize'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setColor:'>
<arg type='@' declared_type='CPTColor*' index='0' name='color'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontName:'>
<arg type='@' declared_type='NSString*' index='0' name='fontName'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFontSize:'>
<arg type='f' declared_type='CGFloat' index='0' name='fontSize'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextAlignment:'>
<arg type='i' declared_type='CPTTextAlignment' index='0' name='textAlignment'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='textAlignment'>
<retval type='i' declared_type='CPTTextAlignment'/>
</method>
</class>
<class name='CPTNumericData'>
<method selector='byteOrder'>
<retval type='l' declared_type='CFByteOrder'/>
</method>
<method selector='bytes'>
<retval type='^v' declared_type='void*' const='true'/>
</method>
<method selector='convertData:dataType:toData:dataType:'>
<arg type='@' declared_type='NSData*' index='0' name='sourceData'/>
<arg type='^{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType*' index='1' name='sourceDataType'/>
<arg type='@' declared_type='NSMutableData*' index='2' name='destData'/>
<arg type='^{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType*' index='3' name='destDataType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='data'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='dataByConvertingToDataType:'>
<arg type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType' index='0' name='newDataType'/>
<retval type='@' declared_type='CPTNumericData*'/>
</method>
<method selector='dataByConvertingToType:sampleBytes:byteOrder:'>
<arg type='i' declared_type='CPTDataTypeFormat' index='0' name='newDataType'/>
<arg type='L' declared_type='size_t' index='1' name='newSampleBytes'/>
<arg type='l' declared_type='CFByteOrder' index='2' name='newByteOrder'/>
<retval type='@' declared_type='CPTNumericData*'/>
</method>
<method selector='dataOrder'>
<retval type='i' declared_type='CPTDataOrder'/>
</method>
<method selector='dataType'>
<retval type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType'/>
</method>
<method selector='dataTypeFormat'>
<retval type='i' declared_type='CPTDataTypeFormat'/>
</method>
<method selector='initWithArray:dataType:shape:'>
<arg type='@' declared_type='NSArray*' index='0' name='newData'/>
<arg type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType' index='1' name='newDataType'/>
<arg type='@' declared_type='NSArray*' index='2' name='shapeArray'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithArray:dataType:shape:dataOrder:'>
<arg type='@' declared_type='NSArray*' index='0' name='newData'/>
<arg type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType' index='1' name='newDataType'/>
<arg type='@' declared_type='NSArray*' index='2' name='shapeArray'/>
<arg type='i' declared_type='CPTDataOrder' index='3' name='order'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithArray:dataTypeString:shape:'>
<arg type='@' declared_type='NSArray*' index='0' name='newData'/>
<arg type='@' declared_type='NSString*' index='1' name='newDataTypeString'/>
<arg type='@' declared_type='NSArray*' index='2' name='shapeArray'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithArray:dataTypeString:shape:dataOrder:'>
<arg type='@' declared_type='NSArray*' index='0' name='newData'/>
<arg type='@' declared_type='NSString*' index='1' name='newDataTypeString'/>
<arg type='@' declared_type='NSArray*' index='2' name='shapeArray'/>
<arg type='i' declared_type='CPTDataOrder' index='3' name='order'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:dataType:shape:'>
<arg type='@' declared_type='NSData*' index='0' name='newData'/>
<arg type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType' index='1' name='newDataType'/>
<arg type='@' declared_type='NSArray*' index='2' name='shapeArray'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:dataType:shape:dataOrder:'>
<arg type='@' declared_type='NSData*' index='0' name='newData'/>
<arg type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType' index='1' name='newDataType'/>
<arg type='@' declared_type='NSArray*' index='2' name='shapeArray'/>
<arg type='i' declared_type='CPTDataOrder' index='3' name='order'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:dataTypeString:shape:'>
<arg type='@' declared_type='NSData*' index='0' name='newData'/>
<arg type='@' declared_type='NSString*' index='1' name='newDataTypeString'/>
<arg type='@' declared_type='NSArray*' index='2' name='shapeArray'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:dataTypeString:shape:dataOrder:'>
<arg type='@' declared_type='NSData*' index='0' name='newData'/>
<arg type='@' declared_type='NSString*' index='1' name='newDataTypeString'/>
<arg type='@' declared_type='NSArray*' index='2' name='shapeArray'/>
<arg type='i' declared_type='CPTDataOrder' index='3' name='order'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='length'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='numberOfDimensions'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='numberOfSamples'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='numericDataWithArray:dataType:shape:' class_method='true'>
<arg type='@' declared_type='NSArray*' index='0' name='newData'/>
<arg type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType' index='1' name='newDataType'/>
<arg type='@' declared_type='NSArray*' index='2' name='shapeArray'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='numericDataWithArray:dataType:shape:dataOrder:' class_method='true'>
<arg type='@' declared_type='NSArray*' index='0' name='newData'/>
<arg type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType' index='1' name='newDataType'/>
<arg type='@' declared_type='NSArray*' index='2' name='shapeArray'/>
<arg type='i' declared_type='CPTDataOrder' index='3' name='order'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='numericDataWithArray:dataTypeString:shape:' class_method='true'>
<arg type='@' declared_type='NSArray*' index='0' name='newData'/>
<arg type='@' declared_type='NSString*' index='1' name='newDataTypeString'/>
<arg type='@' declared_type='NSArray*' index='2' name='shapeArray'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='numericDataWithArray:dataTypeString:shape:dataOrder:' class_method='true'>
<arg type='@' declared_type='NSArray*' index='0' name='newData'/>
<arg type='@' declared_type='NSString*' index='1' name='newDataTypeString'/>
<arg type='@' declared_type='NSArray*' index='2' name='shapeArray'/>
<arg type='i' declared_type='CPTDataOrder' index='3' name='order'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='numericDataWithData:dataType:shape:' class_method='true'>
<arg type='@' declared_type='NSData*' index='0' name='newData'/>
<arg type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType' index='1' name='newDataType'/>
<arg type='@' declared_type='NSArray*' index='2' name='shapeArray'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='numericDataWithData:dataType:shape:dataOrder:' class_method='true'>
<arg type='@' declared_type='NSData*' index='0' name='newData'/>
<arg type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType' index='1' name='newDataType'/>
<arg type='@' declared_type='NSArray*' index='2' name='shapeArray'/>
<arg type='i' declared_type='CPTDataOrder' index='3' name='order'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='numericDataWithData:dataTypeString:shape:' class_method='true'>
<arg type='@' declared_type='NSData*' index='0' name='newData'/>
<arg type='@' declared_type='NSString*' index='1' name='newDataTypeString'/>
<arg type='@' declared_type='NSArray*' index='2' name='shapeArray'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='numericDataWithData:dataTypeString:shape:dataOrder:' class_method='true'>
<arg type='@' declared_type='NSData*' index='0' name='newData'/>
<arg type='@' declared_type='NSString*' index='1' name='newDataTypeString'/>
<arg type='@' declared_type='NSArray*' index='2' name='shapeArray'/>
<arg type='i' declared_type='CPTDataOrder' index='3' name='order'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='sampleArray'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sampleBytes'>
<retval type='L' declared_type='size_t'/>
</method>
<method variadic='true' selector='sampleIndex:'>
<arg type='I' declared_type='NSUInteger' index='0' name='idx'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='samplePointer:'>
<arg type='I' declared_type='NSUInteger' index='0' name='sample'/>
<retval type='^v' declared_type='void*'/>
</method>
<method variadic='true' selector='samplePointerAtIndex:'>
<arg type='I' declared_type='NSUInteger' index='0' name='idx'/>
<retval type='^v' declared_type='void*'/>
</method>
<method selector='sampleValue:'>
<arg type='I' declared_type='NSUInteger' index='0' name='sample'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method variadic='true' selector='sampleValueAtIndex:'>
<arg type='I' declared_type='NSUInteger' index='0' name='idx'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='shape'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='swapByteOrderForData:sampleSize:'>
<arg type='@' declared_type='NSMutableData*' index='0' name='sourceData'/>
<arg type='L' declared_type='size_t' index='1' name='sampleSize'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTPieChart'>
<method selector='borderLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='centerAnchor'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='defaultPieSliceColorForIndex:' class_method='true'>
<arg type='I' declared_type='NSUInteger' index='0' name='pieSliceIndex'/>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='endAngle'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='labelRotationRelativeToRadius'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='medianAngleForPieSliceIndex:'>
<arg type='I' declared_type='NSUInteger' index='0' name='index'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='overlayFill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='pieInnerRadius'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='pieRadius'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='pieSliceIndexAtAngle:'>
<arg type='f' declared_type='CGFloat' index='0' name='angle'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='setBorderLineStyle:'>
<arg type='@' declared_type='CPTLineStyle*' index='0' name='borderLineStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCenterAnchor:'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='0' name='centerAnchor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndAngle:'>
<arg type='f' declared_type='CGFloat' index='0' name='endAngle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelRotationRelativeToRadius:'>
<arg type='B' declared_type='BOOL' index='0' name='labelRotationRelativeToRadius'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOverlayFill:'>
<arg type='@' declared_type='CPTFill*' index='0' name='overlayFill'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPieInnerRadius:'>
<arg type='f' declared_type='CGFloat' index='0' name='pieInnerRadius'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPieRadius:'>
<arg type='f' declared_type='CGFloat' index='0' name='pieRadius'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSliceDirection:'>
<arg type='i' declared_type='CPTPieDirection' index='0' name='sliceDirection'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartAngle:'>
<arg type='f' declared_type='CGFloat' index='0' name='startAngle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sliceDirection'>
<retval type='i' declared_type='CPTPieDirection'/>
</method>
<method selector='startAngle'>
<retval type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='CPTPlot'>
<method selector='alignsPointsToPixels'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='cacheArray:forKey:'>
<arg type='@' declared_type='NSArray*' index='0' name='array'/>
<arg type='@' declared_type='NSString*' index='1' name='key'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cacheArray:forKey:atRecordIndex:'>
<arg type='@' declared_type='NSArray*' index='0' name='array'/>
<arg type='@' declared_type='NSString*' index='1' name='key'/>
<arg type='I' declared_type='NSUInteger' index='2' name='idx'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cacheNumbers:forField:'>
<arg type='@' declared_type='id' index='0' name='numbers'/>
<arg type='I' declared_type='NSUInteger' index='1' name='fieldEnum'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cacheNumbers:forField:atRecordIndex:'>
<arg type='@' declared_type='id' index='0' name='numbers'/>
<arg type='I' declared_type='NSUInteger' index='1' name='fieldEnum'/>
<arg type='I' declared_type='NSUInteger' index='2' name='idx'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cachePrecision'>
<retval type='i' declared_type='CPTPlotCachePrecision'/>
</method>
<method selector='cachedArrayForKey:'>
<arg type='@' declared_type='NSString*' index='0' name='key'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='cachedDataCount'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='cachedDecimalForField:recordIndex:'>
<arg type='I' declared_type='NSUInteger' index='0' name='fieldEnum'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='cachedDoubleForField:recordIndex:'>
<arg type='I' declared_type='NSUInteger' index='0' name='fieldEnum'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='cachedNumberForField:recordIndex:'>
<arg type='I' declared_type='NSUInteger' index='0' name='fieldEnum'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='cachedNumbersForField:'>
<arg type='I' declared_type='NSUInteger' index='0' name='fieldEnum'/>
<retval type='@' declared_type='CPTMutableNumericData*'/>
</method>
<method selector='cachedValueForKey:recordIndex:'>
<arg type='@' declared_type='NSString*' index='0' name='key'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='dataIndexFromInteractionPoint:'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='0' name='point'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='dataNeedsReloading'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='dataSource'>
<retval type='@' declared_type='id'/>
</method>
<method selector='decimalDataType'>
<retval type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType'/>
</method>
<method selector='deleteDataInIndexRange:'>
<arg type='{_NSRange=II}' declared_type='NSRange' index='0' name='indexRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='doubleDataType'>
<retval type='{_CPTNumericDataType=iIi}' declared_type='CPTNumericDataType'/>
</method>
<method selector='doublePrecisionCache'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='drawSwatchForLegend:atIndex:inRect:inContext:'>
<arg type='@' declared_type='CPTLegend*' index='0' name='legend'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='2' name='rect'/>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='3' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fieldIdentifiers'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='fieldIdentifiersForCoordinate:'>
<arg type='i' declared_type='CPTCoordinate' index='0' name='coord'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='insertDataAtIndex:numberOfRecords:'>
<arg type='I' declared_type='NSUInteger' index='0' name='idx'/>
<arg type='I' declared_type='NSUInteger' index='1' name='numberOfRecords'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='labelField'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='labelFormatter'>
<retval type='@' declared_type='NSNumberFormatter*'/>
</method>
<method selector='labelOffset'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='labelRotation'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='labelShadow'>
<retval type='@' declared_type='CPTShadow*'/>
</method>
<method selector='labelTextStyle'>
<retval type='@' declared_type='CPTTextStyle*'/>
</method>
<method selector='loadNumbersForAllFieldsFromDataSourceInRecordIndexRange:'>
<arg type='{_NSRange=II}' declared_type='NSRange' index='0' name='indexRange'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='needsRelabel'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='nilData' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='numberOfFields'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='numberOfLegendEntries'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='numbersFromDataSourceForField:recordIndexRange:'>
<arg type='I' declared_type='NSUInteger' index='0' name='fieldEnum'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='plotArea'>
<retval type='@' declared_type='CPTPlotArea*'/>
</method>
<method selector='plotRangeForCoordinate:'>
<arg type='i' declared_type='CPTCoordinate' index='0' name='coord'/>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='plotRangeForField:'>
<arg type='I' declared_type='NSUInteger' index='0' name='fieldEnum'/>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='plotSpace'>
<retval type='@' declared_type='CPTPlotSpace*'/>
</method>
<method selector='positionLabelAnnotation:forIndex:'>
<arg type='@' declared_type='CPTPlotSpaceAnnotation*' index='0' name='label'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='relabel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='relabelIndexRange:'>
<arg type='{_NSRange=II}' declared_type='NSRange' index='0' name='indexRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='reloadData'>
<retval type='v' declared_type='void'/>
</method>
<method selector='reloadDataIfNeeded'>
<retval type='v' declared_type='void'/>
</method>
<method selector='reloadDataInIndexRange:'>
<arg type='{_NSRange=II}' declared_type='NSRange' index='0' name='indexRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='repositionAllLabelAnnotations'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAlignsPointsToPixels:'>
<arg type='B' declared_type='BOOL' index='0' name='alignsPointsToPixels'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCachePrecision:'>
<arg type='i' declared_type='CPTPlotCachePrecision' index='0' name='cachePrecision'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDataNeedsReloading'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDataSource:'>
<arg type='@' declared_type='id' index='0' name='dataSource'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelField:'>
<arg type='I' declared_type='NSUInteger' index='0' name='labelField'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelFormatter:'>
<arg type='@' declared_type='NSNumberFormatter*' index='0' name='labelFormatter'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelOffset:'>
<arg type='f' declared_type='CGFloat' index='0' name='labelOffset'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelRotation:'>
<arg type='f' declared_type='CGFloat' index='0' name='labelRotation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelShadow:'>
<arg type='@' declared_type='CPTShadow*' index='0' name='labelShadow'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLabelTextStyle:'>
<arg type='@' declared_type='CPTTextStyle*' index='0' name='labelTextStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNeedsRelabel'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotSpace:'>
<arg type='@' declared_type='CPTPlotSpace*' index='0' name='plotSpace'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTitle:'>
<arg type='@' declared_type='NSString*' index='0' name='title'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='title'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='titleForLegendEntryAtIndex:'>
<arg type='I' declared_type='NSUInteger' index='0' name='idx'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='CPTPlotArea'>
<method selector='axisLabelGroup'>
<retval type='@' declared_type='CPTAxisLabelGroup*'/>
</method>
<method selector='axisSet'>
<retval type='@' declared_type='CPTAxisSet*'/>
</method>
<method selector='axisTitleGroup'>
<retval type='@' declared_type='CPTAxisLabelGroup*'/>
</method>
<method selector='borderLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='fill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='majorGridLineGroup'>
<retval type='@' declared_type='CPTGridLineGroup*'/>
</method>
<method selector='minorGridLineGroup'>
<retval type='@' declared_type='CPTGridLineGroup*'/>
</method>
<method selector='plotGroup'>
<retval type='@' declared_type='CPTPlotGroup*'/>
</method>
<method selector='setAxisLabelGroup:'>
<arg type='@' declared_type='CPTAxisLabelGroup*' index='0' name='axisLabelGroup'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAxisSet:'>
<arg type='@' declared_type='CPTAxisSet*' index='0' name='axisSet'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAxisSetLayersForType:'>
<arg type='i' declared_type='CPTGraphLayerType' index='0' name='layerType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAxisTitleGroup:'>
<arg type='@' declared_type='CPTAxisLabelGroup*' index='0' name='axisTitleGroup'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBorderLineStyle:'>
<arg type='@' declared_type='CPTLineStyle*' index='0' name='borderLineStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFill:'>
<arg type='@' declared_type='CPTFill*' index='0' name='fill'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMajorGridLineGroup:'>
<arg type='@' declared_type='CPTGridLineGroup*' index='0' name='majorGridLineGroup'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMinorGridLineGroup:'>
<arg type='@' declared_type='CPTGridLineGroup*' index='0' name='minorGridLineGroup'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotGroup:'>
<arg type='@' declared_type='CPTPlotGroup*' index='0' name='plotGroup'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTopDownLayerOrder:'>
<arg type='@' declared_type='NSArray*' index='0' name='topDownLayerOrder'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sublayerIndexForAxis:layerType:'>
<arg type='@' declared_type='CPTAxis*' index='0' name='axis'/>
<arg type='i' declared_type='CPTGraphLayerType' index='1' name='layerType'/>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='topDownLayerOrder'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='updateAxisSetLayersForType:'>
<arg type='i' declared_type='CPTGraphLayerType' index='0' name='layerType'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTPlotAreaFrame'>
<method selector='axisSet'>
<retval type='@' declared_type='CPTAxisSet*'/>
</method>
<method selector='plotArea'>
<retval type='@' declared_type='CPTPlotArea*'/>
</method>
<method selector='plotGroup'>
<retval type='@' declared_type='CPTPlotGroup*'/>
</method>
<method selector='setAxisSet:'>
<arg type='@' declared_type='CPTAxisSet*' index='0' name='axisSet'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotGroup:'>
<arg type='@' declared_type='CPTPlotGroup*' index='0' name='plotGroup'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTPlotGroup'>
<method selector='addPlot:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='insertPlot:atIndex:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removePlot:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTPlotRange'>
<method selector='compareToDecimal:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' index='0' name='number'/>
<retval type='i' declared_type='CPTPlotRangeComparisonResult'/>
</method>
<method selector='compareToDouble:'>
<arg type='d' declared_type='double' index='0' name='number'/>
<retval type='i' declared_type='CPTPlotRangeComparisonResult'/>
</method>
<method selector='compareToNumber:'>
<arg type='@' declared_type='NSNumber*' index='0' name='number'/>
<retval type='i' declared_type='CPTPlotRangeComparisonResult'/>
</method>
<method selector='contains:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' index='0' name='number'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='containsDouble:'>
<arg type='d' declared_type='double' index='0' name='number'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='containsRange:'>
<arg type='@' declared_type='CPTPlotRange*' index='0' name='otherRange'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='end'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='endDouble'>
<retval type='d' declared_type='double'/>
</method>
<method selector='initWithLocation:length:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' index='0' name='loc'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' index='1' name='len'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='intersectsRange:'>
<arg type='@' declared_type='CPTPlotRange*' index='0' name='otherRange'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToRange:'>
<arg type='@' declared_type='CPTPlotRange*' index='0' name='otherRange'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='length'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='lengthDouble'>
<retval type='d' declared_type='double'/>
</method>
<method selector='location'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='locationDouble'>
<retval type='d' declared_type='double'/>
</method>
<method selector='maxLimit'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='maxLimitDouble'>
<retval type='d' declared_type='double'/>
</method>
<method selector='midPoint'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='midPointDouble'>
<retval type='d' declared_type='double'/>
</method>
<method selector='minLimit'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='minLimitDouble'>
<retval type='d' declared_type='double'/>
</method>
<method selector='plotRangeWithLocation:length:' class_method='true'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' index='0' name='loc'/>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' index='1' name='len'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CPTPlotSpace'>
<method selector='allowsUserInteraction'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='doublePrecisionPlotPoint:forEvent:'>
<arg type='^d' declared_type='double*' index='0' name='plotPoint'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='1' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='doublePrecisionPlotPoint:forPlotAreaViewPoint:'>
<arg type='^d' declared_type='double*' index='0' name='plotPoint'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='1' name='point'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='graph'>
<retval type='@' declared_type='CPTGraph*'/>
</method>
<method selector='identifier'>
<retval type='@' declared_type='id'/>
</method>
<method selector='plotAreaViewPointForDoublePrecisionPlotPoint:'>
<arg type='^d' declared_type='double*' index='0' name='plotPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='plotAreaViewPointForEvent:'>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='0' name='event'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='plotAreaViewPointForPlotPoint:'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*' index='0' name='plotPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='plotPoint:forEvent:'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*' index='0' name='plotPoint'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='1' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='plotPoint:forPlotAreaViewPoint:'>
<arg type='^{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal*' index='0' name='plotPoint'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='1' name='point'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='plotRangeForCoordinate:'>
<arg type='i' declared_type='CPTCoordinate' index='0' name='coordinate'/>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='scaleBy:aboutPoint:'>
<arg type='f' declared_type='CGFloat' index='0' name='interactionScale'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='1' name='interactionPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scaleToFitPlots:'>
<arg type='@' declared_type='NSArray*' index='0' name='plots'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scaleTypeForCoordinate:'>
<arg type='i' declared_type='CPTCoordinate' index='0' name='coordinate'/>
<retval type='i' declared_type='CPTScaleType'/>
</method>
<method selector='setAllowsUserInteraction:'>
<arg type='B' declared_type='BOOL' index='0' name='allowsUserInteraction'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' declared_type='id' index='0' name='delegate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGraph:'>
<arg type='@' declared_type='CPTGraph*' index='0' name='graph'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIdentifier:'>
<arg type='@' declared_type='id' index='0' name='identifier'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotRange:forCoordinate:'>
<arg type='@' declared_type='CPTPlotRange*' index='0' name='newRange'/>
<arg type='i' declared_type='CPTCoordinate' index='1' name='coordinate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setScaleType:forCoordinate:'>
<arg type='i' declared_type='CPTScaleType' index='0' name='newType'/>
<arg type='i' declared_type='CPTCoordinate' index='1' name='coordinate'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTPlotSpaceAnnotation'>
<method selector='anchorPlotPoint'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='initWithPlotSpace:anchorPlotPoint:'>
<arg type='@' declared_type='CPTPlotSpace*' index='0' name='space'/>
<arg type='@' declared_type='NSArray*' index='1' name='plotPoint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='plotSpace'>
<retval type='@' declared_type='CPTPlotSpace*'/>
</method>
<method selector='setAnchorPlotPoint:'>
<arg type='@' declared_type='NSArray*' index='0' name='anchorPlotPoint'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTPlotSymbol'>
<method selector='anchorPoint'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='crossPlotSymbol' class_method='true'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='customPlotSymbolWithPath:' class_method='true'>
<arg type='^{CGPath=}' declared_type='CGPathRef' index='0' name='aPath'/>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='customSymbolPath'>
<retval type='^{CGPath=}' declared_type='CGPathRef'/>
</method>
<method selector='dashPlotSymbol' class_method='true'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='diamondPlotSymbol' class_method='true'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='ellipsePlotSymbol' class_method='true'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='fill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='hexagonPlotSymbol' class_method='true'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='lineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='pentagonPlotSymbol' class_method='true'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='plotSymbol' class_method='true'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='plusPlotSymbol' class_method='true'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='rectanglePlotSymbol' class_method='true'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='renderAsVectorInContext:atPoint:scale:'>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='0' name='context'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='1' name='center'/>
<arg type='f' declared_type='CGFloat' index='2' name='scale'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='renderInContext:atPoint:scale:alignToPixels:'>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='0' name='context'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='1' name='center'/>
<arg type='f' declared_type='CGFloat' index='2' name='scale'/>
<arg type='B' declared_type='BOOL' index='3' name='alignToPixels'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAnchorPoint:'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='0' name='anchorPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCustomSymbolPath:'>
<arg type='^{CGPath=}' declared_type='CGPathRef' index='0' name='customSymbolPath'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFill:'>
<arg type='@' declared_type='CPTFill*' index='0' name='fill'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineStyle:'>
<arg type='@' declared_type='CPTLineStyle*' index='0' name='lineStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShadow:'>
<arg type='@' declared_type='CPTShadow*' index='0' name='shadow'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSize:'>
<arg type='{CGSize=ff}' declared_type='CGSize' index='0' name='size'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSymbolType:'>
<arg type='i' declared_type='CPTPlotSymbolType' index='0' name='symbolType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUsesEvenOddClipRule:'>
<arg type='B' declared_type='BOOL' index='0' name='usesEvenOddClipRule'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shadow'>
<retval type='@' declared_type='CPTShadow*'/>
</method>
<method selector='size'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='snowPlotSymbol' class_method='true'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='starPlotSymbol' class_method='true'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='symbolType'>
<retval type='i' declared_type='CPTPlotSymbolType'/>
</method>
<method selector='trianglePlotSymbol' class_method='true'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='usesEvenOddClipRule'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CPTRangePlot'>
<method selector='areaFill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='barLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='barWidth'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='gapHeight'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='gapWidth'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setAreaFill:'>
<arg type='@' declared_type='CPTFill*' index='0' name='areaFill'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarLineStyle:'>
<arg type='@' declared_type='CPTLineStyle*' index='0' name='barLineStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarWidth:'>
<arg type='f' declared_type='CGFloat' index='0' name='barWidth'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGapHeight:'>
<arg type='f' declared_type='CGFloat' index='0' name='gapHeight'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGapWidth:'>
<arg type='f' declared_type='CGFloat' index='0' name='gapWidth'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTScatterPlot'>
<method selector='areaBaseValue'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='areaBaseValue2'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='areaFill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='areaFill2'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='dataLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='indexOfVisiblePointClosestToPlotAreaPoint:'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='0' name='viewPoint'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='interpolation'>
<retval type='i' declared_type='CPTScatterPlotInterpolation'/>
</method>
<method selector='plotAreaPointOfVisiblePointAtIndex:'>
<arg type='I' declared_type='NSUInteger' index='0' name='idx'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='plotSymbol'>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='plotSymbolForRecordIndex:'>
<arg type='I' declared_type='NSUInteger' index='0' name='idx'/>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='plotSymbolMarginForHitDetection'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setAreaBaseValue2:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' index='0' name='areaBaseValue2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAreaBaseValue:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' index='0' name='areaBaseValue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAreaFill2:'>
<arg type='@' declared_type='CPTFill*' index='0' name='areaFill2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAreaFill:'>
<arg type='@' declared_type='CPTFill*' index='0' name='areaFill'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDataLineStyle:'>
<arg type='@' declared_type='CPTLineStyle*' index='0' name='dataLineStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInterpolation:'>
<arg type='i' declared_type='CPTScatterPlotInterpolation' index='0' name='interpolation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotSymbol:'>
<arg type='@' declared_type='CPTPlotSymbol*' index='0' name='plotSymbol'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotSymbolMarginForHitDetection:'>
<arg type='f' declared_type='CGFloat' index='0' name='plotSymbolMarginForHitDetection'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTShadow'>
<method selector='setShadowInContext:'>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='0' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shadow' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
<method selector='shadowBlurRadius'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='shadowColor'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='shadowOffset'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
</class>
<class name='CPTTextLayer'>
<method selector='initWithText:'>
<arg type='@' declared_type='NSString*' index='0' name='newText'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithText:style:'>
<arg type='@' declared_type='NSString*' index='0' name='newText'/>
<arg type='@' declared_type='CPTTextStyle*' index='1' name='newStyle'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='setText:'>
<arg type='@' declared_type='NSString*' index='0' name='text'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTextStyle:'>
<arg type='@' declared_type='CPTTextStyle*' index='0' name='textStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sizeThatFits'>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='sizeToFit'>
<retval type='v' declared_type='void'/>
</method>
<method selector='text'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='textStyle'>
<retval type='@' declared_type='CPTTextStyle*'/>
</method>
</class>
<class name='CPTTextStyle'>
<method selector='color'>
<retval type='@' declared_type='CPTColor*'/>
</method>
<method selector='fontName'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='fontSize'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='textAlignment'>
<retval type='i' declared_type='CPTTextAlignment'/>
</method>
<method selector='textStyle' class_method='true'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CPTTheme'>
<method selector='applyThemeToAxisSet:'>
<arg type='@' declared_type='CPTAxisSet*' index='0' name='axisSet'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyThemeToBackground:'>
<arg type='@' declared_type='CPTGraph*' index='0' name='graph'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyThemeToGraph:'>
<arg type='@' declared_type='CPTGraph*' index='0' name='graph'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyThemeToPlotArea:'>
<arg type='@' declared_type='CPTPlotAreaFrame*' index='0' name='plotAreaFrame'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='graphClass'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='name' class_method='true'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='newGraph'>
<retval type='@' declared_type='id'/>
</method>
<method selector='registerTheme:' class_method='true'>
<arg type='#' declared_type='Class' index='0' name='themeClass'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGraphClass:'>
<arg type='#' declared_type='Class' index='0' name='graphClass'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='themeClasses' class_method='true'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='themeNamed:' class_method='true'>
<arg type='@' declared_type='NSString*' index='0' name='theme'/>
<retval type='@' declared_type='CPTTheme*'/>
</method>
</class>
<class name='CPTTimeFormatter'>
<method selector='dateFormatter'>
<retval type='@' declared_type='NSDateFormatter*'/>
</method>
<method selector='initWithDateFormatter:'>
<arg type='@' declared_type='NSDateFormatter*' index='0' name='aDateFormatter'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='referenceDate'>
<retval type='@' declared_type='NSDate*'/>
</method>
<method selector='setDateFormatter:'>
<arg type='@' declared_type='NSDateFormatter*' index='0' name='dateFormatter'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReferenceDate:'>
<arg type='@' declared_type='NSDate*' index='0' name='referenceDate'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTTradingRangePlot'>
<method selector='barCornerRadius'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='barWidth'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='decreaseFill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='decreaseLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='increaseFill'>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='increaseLineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='lineStyle'>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='plotStyle'>
<retval type='i' declared_type='CPTTradingRangePlotStyle'/>
</method>
<method selector='setBarCornerRadius:'>
<arg type='f' declared_type='CGFloat' index='0' name='barCornerRadius'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBarWidth:'>
<arg type='f' declared_type='CGFloat' index='0' name='barWidth'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDecreaseFill:'>
<arg type='@' declared_type='CPTFill*' index='0' name='decreaseFill'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDecreaseLineStyle:'>
<arg type='@' declared_type='CPTLineStyle*' index='0' name='decreaseLineStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIncreaseFill:'>
<arg type='@' declared_type='CPTFill*' index='0' name='increaseFill'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIncreaseLineStyle:'>
<arg type='@' declared_type='CPTLineStyle*' index='0' name='increaseLineStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLineStyle:'>
<arg type='@' declared_type='CPTLineStyle*' index='0' name='lineStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPlotStyle:'>
<arg type='i' declared_type='CPTTradingRangePlotStyle' index='0' name='plotStyle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStickLength:'>
<arg type='f' declared_type='CGFloat' index='0' name='stickLength'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stickLength'>
<retval type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='CPTXYAxis'>
<method selector='axisConstraints'>
<retval type='@' declared_type='CPTConstraints*'/>
</method>
<method selector='orthogonalCoordinateDecimal'>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='setAxisConstraints:'>
<arg type='@' declared_type='CPTConstraints*' index='0' name='axisConstraints'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setOrthogonalCoordinateDecimal:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' index='0' name='orthogonalCoordinateDecimal'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CPTXYAxisSet'>
<method selector='xAxis'>
<retval type='@' declared_type='CPTXYAxis*'/>
</method>
<method selector='yAxis'>
<retval type='@' declared_type='CPTXYAxis*'/>
</method>
</class>
<class name='CPTXYGraph'>
<method selector='initWithFrame:xScaleType:yScaleType:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0' name='newFrame'/>
<arg type='i' declared_type='CPTScaleType' index='1' name='newXScaleType'/>
<arg type='i' declared_type='CPTScaleType' index='2' name='newYScaleType'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CPTXYPlotSpace'>
<method selector='globalXRange'>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='globalYRange'>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='setGlobalXRange:'>
<arg type='@' declared_type='CPTPlotRange*' index='0' name='globalXRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGlobalYRange:'>
<arg type='@' declared_type='CPTPlotRange*' index='0' name='globalYRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setXRange:'>
<arg type='@' declared_type='CPTPlotRange*' index='0' name='xRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setXScaleType:'>
<arg type='i' declared_type='CPTScaleType' index='0' name='xScaleType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setYRange:'>
<arg type='@' declared_type='CPTPlotRange*' index='0' name='yRange'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setYScaleType:'>
<arg type='i' declared_type='CPTScaleType' index='0' name='yScaleType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='xRange'>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='xScaleType'>
<retval type='i' declared_type='CPTScaleType'/>
</method>
<method selector='yRange'>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='yScaleType'>
<retval type='i' declared_type='CPTScaleType'/>
</method>
</class>
<class name='NSCoder'>
<method selector='decodeCGFloatForKey:'>
<arg type='@' declared_type='NSString*' index='0' name='key'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='decodeCPTPointForKey:'>
<arg type='@' declared_type='NSString*' index='0' name='key'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='decodeCPTRectForKey:'>
<arg type='@' declared_type='NSString*' index='0' name='key'/>
<retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect'/>
</method>
<method selector='decodeCPTSizeForKey:'>
<arg type='@' declared_type='NSString*' index='0' name='key'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
<method selector='decodeDecimalForKey:'>
<arg type='@' declared_type='NSString*' index='0' name='key'/>
<retval type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal'/>
</method>
<method selector='encodeCGColorSpace:forKey:'>
<arg type='^{CGColorSpace=}' declared_type='CGColorSpaceRef' index='0' name='colorSpace'/>
<arg type='@' declared_type='NSString*' index='1' name='key'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeCGFloat:forKey:'>
<arg type='f' declared_type='CGFloat' index='0' name='number'/>
<arg type='@' declared_type='NSString*' index='1' name='key'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeCGImage:forKey:'>
<arg type='^{CGImage=}' declared_type='CGImageRef' index='0' name='image'/>
<arg type='@' declared_type='NSString*' index='1' name='key'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeCGPath:forKey:'>
<arg type='^{CGPath=}' declared_type='CGPathRef' index='0' name='path'/>
<arg type='@' declared_type='NSString*' index='1' name='key'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeCPTPoint:forKey:'>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='0' name='point'/>
<arg type='@' declared_type='NSString*' index='1' name='key'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeCPTRect:forKey:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0' name='rect'/>
<arg type='@' declared_type='NSString*' index='1' name='key'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeCPTSize:forKey:'>
<arg type='{CGSize=ff}' declared_type='CGSize' index='0' name='size'/>
<arg type='@' declared_type='NSString*' index='1' name='key'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='encodeDecimal:forKey:'>
<arg type='{_NSDecimal=b8b4b1b1b18[8S]}' declared_type='NSDecimal' index='0' name='number'/>
<arg type='@' declared_type='NSString*' index='1' name='key'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='newCGColorSpaceDecodeForKey:'>
<arg type='@' declared_type='NSString*' index='0' name='key'/>
<retval type='^{CGColorSpace=}' declared_type='CGColorSpaceRef'/>
</method>
<method selector='newCGImageDecodeForKey:'>
<arg type='@' declared_type='NSString*' index='0' name='key'/>
<retval type='^{CGImage=}' declared_type='CGImageRef'/>
</method>
<method selector='newCGPathDecodeForKey:'>
<arg type='@' declared_type='NSString*' index='0' name='key'/>
<retval type='^{CGPath=}' declared_type='CGPathRef'/>
</method>
</class>
<class name='NSNumber'>
<method selector='cgFloatValue'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='decimalNumber'>
<retval type='@' declared_type='NSDecimalNumber*'/>
</method>
<method selector='initWithCGFloat:'>
<arg type='f' declared_type='CGFloat' index='0' name='number'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isGreaterThan:'>
<arg type='@' declared_type='NSNumber*' index='0' name='other'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isGreaterThanOrEqualTo:'>
<arg type='@' declared_type='NSNumber*' index='0' name='other'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isLessThan:'>
<arg type='@' declared_type='NSNumber*' index='0' name='other'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isLessThanOrEqualTo:'>
<arg type='@' declared_type='NSNumber*' index='0' name='other'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='numberWithCGFloat:' class_method='true'>
<arg type='f' declared_type='CGFloat' index='0' name='number'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
</class>
<class name='NSObject'>
<method selector='axis:shouldUpdateAxisLabelsAtLocations:'>
<arg type='@' declared_type='CPTAxis*' index='0' name='axis'/>
<arg type='@' declared_type='NSSet*' index='1' name='locations'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='axis:shouldUpdateMinorAxisLabelsAtLocations:'>
<arg type='@' declared_type='CPTAxis*' index='0' name='axis'/>
<arg type='@' declared_type='NSSet*' index='1' name='locations'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='axisDidRelabel:'>
<arg type='@' declared_type='CPTAxis*' index='0' name='axis'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='axisShouldRelabel:'>
<arg type='@' declared_type='CPTAxis*' index='0' name='axis'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='barFillForBarPlot:recordIndex:'>
<arg type='@' declared_type='CPTBarPlot*' index='0' name='barPlot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='barFillsForBarPlot:recordIndexRange:'>
<arg type='@' declared_type='CPTBarPlot*' index='0' name='barPlot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='barLineStyleForBarPlot:recordIndex:'>
<arg type='@' declared_type='CPTBarPlot*' index='0' name='barPlot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='barLineStyleForRangePlot:recordIndex:'>
<arg type='@' declared_type='CPTRangePlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='barLineStylesForBarPlot:recordIndexRange:'>
<arg type='@' declared_type='CPTBarPlot*' index='0' name='barPlot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='barLineStylesForRangePlot:recordIndexRange:'>
<arg type='@' declared_type='CPTRangePlot*' index='0' name='plot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='barPlot:barWasSelectedAtRecordIndex:'>
<arg type='@' declared_type='CPTBarPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='barPlot:barWasSelectedAtRecordIndex:withEvent:'>
<arg type='@' declared_type='CPTBarPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='2' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dataForPlot:field:recordIndexRange:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='fieldEnum'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='2' name='indexRange'/>
<retval type='@' declared_type='CPTNumericData*'/>
</method>
<method selector='dataForPlot:recordIndexRange:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='CPTNumericData*'/>
</method>
<method selector='dataLabelForPlot:recordIndex:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTLayer*'/>
</method>
<method selector='dataLabelsForPlot:recordIndexRange:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='decreaseFillForTradingRangePlot:recordIndex:'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='decreaseFillsForTradingRangePlot:recordIndexRange:'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='decreaseLineStyleForTradingRangePlot:recordIndex:'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='decreaseLineStylesForTradingRangePlot:recordIndexRange:'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='didFinishDrawing:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='doubleForPlot:field:recordIndex:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='fieldEnum'/>
<arg type='I' declared_type='NSUInteger' index='2' name='idx'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='doublesForPlot:field:recordIndexRange:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='fieldEnum'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='2' name='indexRange'/>
<retval type='^d' declared_type='double*'/>
</method>
<method selector='increaseFillForTradingRangePlot:recordIndex:'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='increaseFillsForTradingRangePlot:recordIndexRange:'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='increaseLineStyleForTradingRangePlot:recordIndex:'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='increaseLineStylesForTradingRangePlot:recordIndexRange:'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='legend:shouldDrawSwatchAtIndex:forPlot:inRect:inContext:'>
<arg type='@' declared_type='CPTLegend*' index='0' name='legend'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<arg type='@' declared_type='CPTPlot*' index='2' name='plot'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='3' name='rect'/>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='4' name='context'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='legendTitleForBarPlot:recordIndex:'>
<arg type='@' declared_type='CPTBarPlot*' index='0' name='barPlot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='legendTitleForPieChart:recordIndex:'>
<arg type='@' declared_type='CPTPieChart*' index='0' name='pieChart'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='lineStyleForTradingRangePlot:recordIndex:'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='lineStylesForTradingRangePlot:recordIndexRange:'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='numberForPlot:field:recordIndex:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='fieldEnum'/>
<arg type='I' declared_type='NSUInteger' index='2' name='idx'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='numberOfRecordsForPlot:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='numbersForPlot:field:recordIndexRange:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='fieldEnum'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='2' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='pieChart:sliceWasSelectedAtRecordIndex:'>
<arg type='@' declared_type='CPTPieChart*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pieChart:sliceWasSelectedAtRecordIndex:withEvent:'>
<arg type='@' declared_type='CPTPieChart*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='2' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='plot:dataLabelWasSelectedAtRecordIndex:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='plot:dataLabelWasSelectedAtRecordIndex:withEvent:'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='2' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='plotSpace:didChangePlotRangeForCoordinate:'>
<arg type='@' declared_type='CPTPlotSpace*' index='0' name='space'/>
<arg type='i' declared_type='CPTCoordinate' index='1' name='coordinate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='plotSpace:shouldHandlePointingDeviceCancelledEvent:'>
<arg type='@' declared_type='CPTPlotSpace*' index='0' name='space'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='1' name='event'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='plotSpace:shouldHandlePointingDeviceDownEvent:atPoint:'>
<arg type='@' declared_type='CPTPlotSpace*' index='0' name='space'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='1' name='event'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='2' name='point'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='plotSpace:shouldHandlePointingDeviceDraggedEvent:atPoint:'>
<arg type='@' declared_type='CPTPlotSpace*' index='0' name='space'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='1' name='event'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='2' name='point'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='plotSpace:shouldHandlePointingDeviceUpEvent:atPoint:'>
<arg type='@' declared_type='CPTPlotSpace*' index='0' name='space'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='1' name='event'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='2' name='point'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='plotSpace:shouldScaleBy:aboutPoint:'>
<arg type='@' declared_type='CPTPlotSpace*' index='0' name='space'/>
<arg type='f' declared_type='CGFloat' index='1' name='interactionScale'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='2' name='interactionPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='plotSpace:willChangePlotRangeTo:forCoordinate:'>
<arg type='@' declared_type='CPTPlotSpace*' index='0' name='space'/>
<arg type='@' declared_type='CPTPlotRange*' index='1' name='newRange'/>
<arg type='i' declared_type='CPTCoordinate' index='2' name='coordinate'/>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='plotSpace:willDisplaceBy:'>
<arg type='@' declared_type='CPTPlotSpace*' index='0' name='space'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='1' name='proposedDisplacementVector'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='pointingDeviceCancelledEvent:'>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='0' name='event'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pointingDeviceDownEvent:atPoint:'>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='0' name='event'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='1' name='interactionPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pointingDeviceDraggedEvent:atPoint:'>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='0' name='event'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='1' name='interactionPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pointingDeviceUpEvent:atPoint:'>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='0' name='event'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='1' name='interactionPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='radialOffsetForPieChart:recordIndex:'>
<arg type='@' declared_type='CPTPieChart*' index='0' name='pieChart'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='radialOffsetsForPieChart:recordIndexRange:'>
<arg type='@' declared_type='CPTPieChart*' index='0' name='pieChart'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='rangePlot:rangeWasSelectedAtRecordIndex:'>
<arg type='@' declared_type='CPTRangePlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rangePlot:rangeWasSelectedAtRecordIndex:withEvent:'>
<arg type='@' declared_type='CPTRangePlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='2' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scatterPlot:plotSymbolWasSelectedAtRecordIndex:'>
<arg type='@' declared_type='CPTScatterPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scatterPlot:plotSymbolWasSelectedAtRecordIndex:withEvent:'>
<arg type='@' declared_type='CPTScatterPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='2' name='event'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sliceFillForPieChart:recordIndex:'>
<arg type='@' declared_type='CPTPieChart*' index='0' name='pieChart'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='sliceFillsForPieChart:recordIndexRange:'>
<arg type='@' declared_type='CPTPieChart*' index='0' name='pieChart'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='symbolForScatterPlot:recordIndex:'>
<arg type='@' declared_type='CPTScatterPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='symbolsForScatterPlot:recordIndexRange:'>
<arg type='@' declared_type='CPTScatterPlot*' index='0' name='plot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='tradingRangePlot:barWasSelectedAtRecordIndex:'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tradingRangePlot:barWasSelectedAtRecordIndex:withEvent:'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='2' name='event'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='NSString'>
<method selector='drawInRect:withTextStyle:inContext:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0' name='rect'/>
<arg type='@' declared_type='CPTTextStyle*' index='1' name='style'/>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='2' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sizeWithTextStyle:'>
<arg type='@' declared_type='CPTTextStyle*' index='0' name='style'/>
<retval type='{CGSize=ff}' declared_type='CGSize'/>
</method>
</class>
<class name='_CPTConstraintsFixed'>
<method selector='initWithLowerOffset:'>
<arg type='f' declared_type='CGFloat' index='0' name='newOffset'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithUpperOffset:'>
<arg type='f' declared_type='CGFloat' index='0' name='newOffset'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToConstraint:'>
<arg type='@' declared_type='CPTConstraints*' index='0' name='otherConstraint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='positionForLowerBound:upperBound:'>
<arg type='f' declared_type='CGFloat' index='0' name='lowerBound'/>
<arg type='f' declared_type='CGFloat' index='1' name='upperBound'/>
<retval type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='_CPTConstraintsRelative'>
<method selector='initWithRelativeOffset:'>
<arg type='f' declared_type='CGFloat' index='0' name='newOffset'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isEqualToConstraint:'>
<arg type='@' declared_type='CPTConstraints*' index='0' name='otherConstraint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='positionForLowerBound:upperBound:'>
<arg type='f' declared_type='CGFloat' index='0' name='lowerBound'/>
<arg type='f' declared_type='CGFloat' index='1' name='upperBound'/>
<retval type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='_CPTFillColor'>
<method selector='fillPathInContext:'>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='0' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fillRect:inContext:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0' name='rect'/>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='1' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithColor:'>
<arg type='@' declared_type='CPTColor*' index='0' name='aCcolor'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='_CPTFillGradient'>
<method selector='fillPathInContext:'>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='0' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fillRect:inContext:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0' name='rect'/>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='1' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithGradient:'>
<arg type='@' declared_type='CPTGradient*' index='0' name='aGradient'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='_CPTFillImage'>
<method selector='fillPathInContext:'>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='0' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='fillRect:inContext:'>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='0' name='rect'/>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='1' name='context'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithImage:'>
<arg type='@' declared_type='CPTImage*' index='0' name='anImage'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<informal_protocol name='CPTAxisDelegate'>
<method selector='axis:shouldUpdateAxisLabelsAtLocations:' type='B16@0:4@8@12'>
<arg type='@' declared_type='CPTAxis*' index='0' name='axis'/>
<arg type='@' declared_type='NSSet*' index='1' name='locations'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='axis:shouldUpdateMinorAxisLabelsAtLocations:' type='B16@0:4@8@12'>
<arg type='@' declared_type='CPTAxis*' index='0' name='axis'/>
<arg type='@' declared_type='NSSet*' index='1' name='locations'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='axisDidRelabel:' type='v12@0:4@8'>
<arg type='@' declared_type='CPTAxis*' index='0' name='axis'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='axisShouldRelabel:' type='B12@0:4@8'>
<arg type='@' declared_type='CPTAxis*' index='0' name='axis'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='CPTBarPlotDataSource'>
<method selector='barFillForBarPlot:recordIndex:' type='@16@0:4@8I12'>
<arg type='@' declared_type='CPTBarPlot*' index='0' name='barPlot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='barFillsForBarPlot:recordIndexRange:' type='@20@0:4@8{_NSRange=II}12'>
<arg type='@' declared_type='CPTBarPlot*' index='0' name='barPlot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='barLineStyleForBarPlot:recordIndex:' type='@16@0:4@8I12'>
<arg type='@' declared_type='CPTBarPlot*' index='0' name='barPlot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='barLineStylesForBarPlot:recordIndexRange:' type='@20@0:4@8{_NSRange=II}12'>
<arg type='@' declared_type='CPTBarPlot*' index='0' name='barPlot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='legendTitleForBarPlot:recordIndex:' type='@16@0:4@8I12'>
<arg type='@' declared_type='CPTBarPlot*' index='0' name='barPlot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='NSString*'/>
</method>
</informal_protocol>
<informal_protocol name='CPTBarPlotDelegate'>
<method selector='barPlot:barWasSelectedAtRecordIndex:' type='v16@0:4@8I12'>
<arg type='@' declared_type='CPTBarPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='barPlot:barWasSelectedAtRecordIndex:withEvent:' type='v20@0:4@8I12^{UIEvent=#d}16'>
<arg type='@' declared_type='CPTBarPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='2' name='event'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CPTLegendDelegate'>
<method selector='legend:shouldDrawSwatchAtIndex:forPlot:inRect:inContext:' type='B40@0:4@8I12@16{CGRect={CGPoint=ff}{CGSize=ff}}20^{CGContext=}36'>
<arg type='@' declared_type='CPTLegend*' index='0' name='legend'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<arg type='@' declared_type='CPTPlot*' index='2' name='plot'/>
<arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' declared_type='CGRect' index='3' name='rect'/>
<arg type='^{CGContext=}' declared_type='CGContextRef' index='4' name='context'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='CPTPieChartDataSource'>
<method selector='legendTitleForPieChart:recordIndex:' type='@16@0:4@8I12'>
<arg type='@' declared_type='CPTPieChart*' index='0' name='pieChart'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='radialOffsetForPieChart:recordIndex:' type='f16@0:4@8I12'>
<arg type='@' declared_type='CPTPieChart*' index='0' name='pieChart'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='radialOffsetsForPieChart:recordIndexRange:' type='@20@0:4@8{_NSRange=II}12'>
<arg type='@' declared_type='CPTPieChart*' index='0' name='pieChart'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='sliceFillForPieChart:recordIndex:' type='@16@0:4@8I12'>
<arg type='@' declared_type='CPTPieChart*' index='0' name='pieChart'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='sliceFillsForPieChart:recordIndexRange:' type='@20@0:4@8{_NSRange=II}12'>
<arg type='@' declared_type='CPTPieChart*' index='0' name='pieChart'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</informal_protocol>
<informal_protocol name='CPTPieChartDelegate'>
<method selector='pieChart:sliceWasSelectedAtRecordIndex:' type='v16@0:4@8I12'>
<arg type='@' declared_type='CPTPieChart*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='pieChart:sliceWasSelectedAtRecordIndex:withEvent:' type='v20@0:4@8I12^{UIEvent=#d}16'>
<arg type='@' declared_type='CPTPieChart*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='2' name='event'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CPTPlotDataSource'>
<method selector='dataForPlot:field:recordIndexRange:' type='@24@0:4@8I12{_NSRange=II}16'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='fieldEnum'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='2' name='indexRange'/>
<retval type='@' declared_type='CPTNumericData*'/>
</method>
<method selector='dataForPlot:recordIndexRange:' type='@20@0:4@8{_NSRange=II}12'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='CPTNumericData*'/>
</method>
<method selector='dataLabelForPlot:recordIndex:' type='@16@0:4@8I12'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTLayer*'/>
</method>
<method selector='dataLabelsForPlot:recordIndexRange:' type='@20@0:4@8{_NSRange=II}12'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='doubleForPlot:field:recordIndex:' type='d20@0:4@8I12I16'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='fieldEnum'/>
<arg type='I' declared_type='NSUInteger' index='2' name='idx'/>
<retval type='d' declared_type='double'/>
</method>
<method selector='doublesForPlot:field:recordIndexRange:' type='^d24@0:4@8I12{_NSRange=II}16'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='fieldEnum'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='2' name='indexRange'/>
<retval type='^d' declared_type='double*'/>
</method>
<method selector='numberForPlot:field:recordIndex:' type='@20@0:4@8I12I16'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='fieldEnum'/>
<arg type='I' declared_type='NSUInteger' index='2' name='idx'/>
<retval type='@' declared_type='NSNumber*'/>
</method>
<method selector='numberOfRecordsForPlot:' type='I12@0:4@8'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='numbersForPlot:field:recordIndexRange:' type='@24@0:4@8I12{_NSRange=II}16'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='fieldEnum'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='2' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</informal_protocol>
<informal_protocol name='CPTPlotDelegate'>
<method selector='didFinishDrawing:' type='v12@0:4@8'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='plot:dataLabelWasSelectedAtRecordIndex:' type='v16@0:4@8I12'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='plot:dataLabelWasSelectedAtRecordIndex:withEvent:' type='v20@0:4@8I12^{UIEvent=#d}16'>
<arg type='@' declared_type='CPTPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='2' name='event'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CPTPlotSpaceDelegate'>
<method selector='plotSpace:didChangePlotRangeForCoordinate:' type='v16@0:4@8i12'>
<arg type='@' declared_type='CPTPlotSpace*' index='0' name='space'/>
<arg type='i' declared_type='CPTCoordinate' index='1' name='coordinate'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='plotSpace:shouldHandlePointingDeviceCancelledEvent:' type='B16@0:4@8^{UIEvent=#d}12'>
<arg type='@' declared_type='CPTPlotSpace*' index='0' name='space'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='1' name='event'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='plotSpace:shouldHandlePointingDeviceDownEvent:atPoint:' type='B24@0:4@8^{UIEvent=#d}12{CGPoint=ff}16'>
<arg type='@' declared_type='CPTPlotSpace*' index='0' name='space'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='1' name='event'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='2' name='point'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='plotSpace:shouldHandlePointingDeviceDraggedEvent:atPoint:' type='B24@0:4@8^{UIEvent=#d}12{CGPoint=ff}16'>
<arg type='@' declared_type='CPTPlotSpace*' index='0' name='space'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='1' name='event'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='2' name='point'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='plotSpace:shouldHandlePointingDeviceUpEvent:atPoint:' type='B24@0:4@8^{UIEvent=#d}12{CGPoint=ff}16'>
<arg type='@' declared_type='CPTPlotSpace*' index='0' name='space'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='1' name='event'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='2' name='point'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='plotSpace:shouldScaleBy:aboutPoint:' type='B24@0:4@8f12{CGPoint=ff}16'>
<arg type='@' declared_type='CPTPlotSpace*' index='0' name='space'/>
<arg type='f' declared_type='CGFloat' index='1' name='interactionScale'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='2' name='interactionPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='plotSpace:willChangePlotRangeTo:forCoordinate:' type='@20@0:4@8@12i16'>
<arg type='@' declared_type='CPTPlotSpace*' index='0' name='space'/>
<arg type='@' declared_type='CPTPlotRange*' index='1' name='newRange'/>
<arg type='i' declared_type='CPTCoordinate' index='2' name='coordinate'/>
<retval type='@' declared_type='CPTPlotRange*'/>
</method>
<method selector='plotSpace:willDisplaceBy:' type='{CGPoint=ff}20@0:4@8{CGPoint=ff}12'>
<arg type='@' declared_type='CPTPlotSpace*' index='0' name='space'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='1' name='proposedDisplacementVector'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
</informal_protocol>
<informal_protocol name='CPTRangePlotDataSource'>
<method selector='barLineStyleForRangePlot:recordIndex:' type='@16@0:4@8I12'>
<arg type='@' declared_type='CPTRangePlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='barLineStylesForRangePlot:recordIndexRange:' type='@20@0:4@8{_NSRange=II}12'>
<arg type='@' declared_type='CPTRangePlot*' index='0' name='plot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</informal_protocol>
<informal_protocol name='CPTRangePlotDelegate'>
<method selector='rangePlot:rangeWasSelectedAtRecordIndex:' type='v16@0:4@8I12'>
<arg type='@' declared_type='CPTRangePlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rangePlot:rangeWasSelectedAtRecordIndex:withEvent:' type='v20@0:4@8I12^{UIEvent=#d}16'>
<arg type='@' declared_type='CPTRangePlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='2' name='event'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CPTResponder'>
<method selector='pointingDeviceCancelledEvent:' type='B12@0:4^{UIEvent=#d}8'>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='0' name='event'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pointingDeviceDownEvent:atPoint:' type='B20@0:4^{UIEvent=#d}8{CGPoint=ff}12'>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='0' name='event'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='1' name='interactionPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pointingDeviceDraggedEvent:atPoint:' type='B20@0:4^{UIEvent=#d}8{CGPoint=ff}12'>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='0' name='event'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='1' name='interactionPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pointingDeviceUpEvent:atPoint:' type='B20@0:4^{UIEvent=#d}8{CGPoint=ff}12'>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='0' name='event'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint' index='1' name='interactionPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='CPTScatterPlotDataSource'>
<method selector='symbolForScatterPlot:recordIndex:' type='@16@0:4@8I12'>
<arg type='@' declared_type='CPTScatterPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTPlotSymbol*'/>
</method>
<method selector='symbolsForScatterPlot:recordIndexRange:' type='@20@0:4@8{_NSRange=II}12'>
<arg type='@' declared_type='CPTScatterPlot*' index='0' name='plot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</informal_protocol>
<informal_protocol name='CPTScatterPlotDelegate'>
<method selector='scatterPlot:plotSymbolWasSelectedAtRecordIndex:' type='v16@0:4@8I12'>
<arg type='@' declared_type='CPTScatterPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='scatterPlot:plotSymbolWasSelectedAtRecordIndex:withEvent:' type='v20@0:4@8I12^{UIEvent=#d}16'>
<arg type='@' declared_type='CPTScatterPlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='2' name='event'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CPTTradingRangePlotDataSource'>
<method selector='decreaseFillForTradingRangePlot:recordIndex:' type='@16@0:4@8I12'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='decreaseFillsForTradingRangePlot:recordIndexRange:' type='@20@0:4@8{_NSRange=II}12'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='decreaseLineStyleForTradingRangePlot:recordIndex:' type='@16@0:4@8I12'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='decreaseLineStylesForTradingRangePlot:recordIndexRange:' type='@20@0:4@8{_NSRange=II}12'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='increaseFillForTradingRangePlot:recordIndex:' type='@16@0:4@8I12'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTFill*'/>
</method>
<method selector='increaseFillsForTradingRangePlot:recordIndexRange:' type='@20@0:4@8{_NSRange=II}12'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='increaseLineStyleForTradingRangePlot:recordIndex:' type='@16@0:4@8I12'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='increaseLineStylesForTradingRangePlot:recordIndexRange:' type='@20@0:4@8{_NSRange=II}12'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='lineStyleForTradingRangePlot:recordIndex:' type='@16@0:4@8I12'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='@' declared_type='CPTLineStyle*'/>
</method>
<method selector='lineStylesForTradingRangePlot:recordIndexRange:' type='@20@0:4@8{_NSRange=II}12'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='{_NSRange=II}' declared_type='NSRange' index='1' name='indexRange'/>
<retval type='@' declared_type='NSArray*'/>
</method>
</informal_protocol>
<informal_protocol name='CPTTradingRangePlotDelegate'>
<method selector='tradingRangePlot:barWasSelectedAtRecordIndex:' type='v16@0:4@8I12'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='tradingRangePlot:barWasSelectedAtRecordIndex:withEvent:' type='v20@0:4@8I12^{UIEvent=#d}16'>
<arg type='@' declared_type='CPTTradingRangePlot*' index='0' name='plot'/>
<arg type='I' declared_type='NSUInteger' index='1' name='idx'/>
<arg type='^{UIEvent=#d}' declared_type='UIEvent*' index='2' name='event'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
</signatures>
